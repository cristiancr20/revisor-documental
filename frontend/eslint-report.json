[{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/App.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Router' is defined but never used.","line":3,"column":20,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":26}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n  Outlet\n} from \"react-router-dom\";\n\n/* import { AuthProvider, useAuth } from \"./context/AuthContext\"; */\n\nimport Dashboard from \"./pages/Dashboard\";\n\n/* AUTENTICACION */\nimport Login from \"./pages/Login\";\nimport SignUp from \"./pages/SignUp\";\n\n/* ESTUDIANTE */\nimport StudentsDashboard from \"./pages/StudentDashboard\";\nimport SubirDocumento from \"./components/SubirDocumento\";\nimport ViewProjectsStudents from \"./pages/ViewProjectsStudents\";\nimport ProjectDetalle from \"./pages/ProyectoDetalle\";\n\n/* TUTOR */\nimport TutorDashboard from \"./pages/TutorDashboard\";\nimport ProjectsAsignedTutor from \"./pages/ProjectsAsignedTutor\";\nimport DocumentoViewer from \"./pages/DocumentViewer\";\nimport { decryptData } from \"./utils/encryption\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>404</h1>\n      <p>Not Found</p>\n    </div>\n  );\n};\n\n/* COMPONENTE RUTAS PROTEGIDAS */\nconst ProtectedRoute = () => {\n\n  const encryptedUserData = localStorage.getItem(\"userData\");\n  if (!encryptedUserData) {\n    console.warn(\"No se encontraron datos de usuario en localStorage.\");\n    return;\n  }\n  const userData = decryptData(encryptedUserData);\n\n\n  const isAutenticated = () => {\n    const email = userData.email;\n    return email !== null;\n  };\n\n  return isAutenticated() ? <Outlet /> : <Navigate to=\"/\" replace />;\n};\n\nfunction App() {\n  return (\n    <>\n        <Routes>\n          {/* Rutas públicas */}\n          <Route path=\"/\" element={<Dashboard />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signup\" element={<SignUp />} />\n\n          {/* Rutas protegidas */}\n          <Route element={<ProtectedRoute />}>\n            {/* Rutas de Tutor */}\n            <Route path=\"/tutor/dashboard\" element={<TutorDashboard />} />\n            <Route path=\"/proyectos/asignados\" element={<ProjectsAsignedTutor />} />\n            <Route path=\"/documento/:documentId\" element={<DocumentoViewer />} />\n\n            {/* Rutas de Estudiante */}\n            <Route path=\"/student/dashboard\" element={<StudentsDashboard />} />\n            <Route path=\"/proyecto/ver\" element={<ViewProjectsStudents />} />\n            <Route path=\"/subir/documento\" element={<SubirDocumento />} />\n            <Route path=\"/proyecto/:projectId\" element={<ProjectDetalle />} />\n          </Route>\n\n          {/* Ruta 404 */}\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n    </>\n  );\n}\n\nexport default App;","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/UserContext.js","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'children' is missing in props validation","line":6,"column":32,"nodeType":"Property","messageId":"missingPropType","endLine":6,"endColumn":40}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/UserContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/Alerts/Alerts.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/CommentsPanel.jsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'comments' is missing in props validation","line":9,"column":26,"nodeType":"Property","messageId":"missingPropType","endLine":9,"endColumn":39},{"ruleId":"react/prop-types","severity":2,"message":"'onUpdateComments' is missing in props validation","line":9,"column":41,"nodeType":"Property","messageId":"missingPropType","endLine":9,"endColumn":57},{"ruleId":"react/prop-types","severity":2,"message":"'onCommentClick' is missing in props validation","line":9,"column":59,"nodeType":"Property","messageId":"missingPropType","endLine":9,"endColumn":73}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport { updateComment, deleteComment } from \"../core/Comments\";\nimport Swal from \"sweetalert2\";\nimport { FaArrowDown, FaPen } from \"react-icons/fa\";\nimport { MdDelete } from \"react-icons/md\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { decryptData } from \"../utils/encryption\";\n\nconst CommentsPanel = ({ comments = [], onUpdateComments, onCommentClick }) => {\n\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [updatedContent, setUpdatedContent] = useState(\"\");\n  const [isDropdownOpenComments, setIsDropdownOpenComments] = useState(false);\n\n  const encryptedUserData = localStorage.getItem(\"userData\");\n  let rol = null;\n\n  if (encryptedUserData) {\n    // Desencriptar los datos\n    const decryptedUserData = decryptData(encryptedUserData);\n\n    // Acceder al rol desde los datos desencriptados\n    rol = decryptedUserData.rol;\n\n  } else {\n    console.log(\"No se encontró el userData en localStorage\");\n  }\n\n  const handleEditClick = (comment) => {\n    setEditingCommentId(comment.id);\n    setUpdatedContent(comment.attributes.correccion);\n  };\n\n  const handleEditSubmit = async (commentId) => {\n    try {\n      await updateComment(commentId, updatedContent);\n      onUpdateComments();\n      setEditingCommentId(null);\n    } catch (error) {\n      console.error(\"Error updating comment\", error);\n    }\n  };\n\n  const handleDeleteClick = async (commentId) => {\n    Swal.fire({\n      title: \"¿Estás seguro?\",\n      text: \"No podrás revertir esta acción!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Sí, eliminar!\",\n      cancelButtonText: \"Cancelar\",\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        try {\n          await deleteComment(commentId);\n          onUpdateComments();\n          Swal.fire(\n            \"Eliminado!\",\n            \"El comentario ha sido eliminado.\",\n            \"success\"\n          );\n        } catch (error) {\n          console.error(\"Error deleting comment\", error);\n          Swal.fire(\n            \"Error!\",\n            \"Hubo un problema al eliminar el comentario.\",\n            \"error\"\n          );\n        }\n      }\n    });\n  };\n\n  const handleDropdownToggleComments = () => {\n    setIsDropdownOpenComments(!isDropdownOpenComments);\n  };\n\n  return (\n    <div className=\"comments-panel p-4 rounded\">\n      <div className=\"relative\">\n        <motion.button\n          whileTap={{ scale: 0.95 }}\n          type=\"button\"\n          className=\"flex p-2 items-center space-x-2 bg-gray-800 rounded-lg focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600\"\n          onClick={handleDropdownToggleComments}\n        >\n          <span className=\"text-white font-bold\">Ver Comentarios</span>\n          <motion.div\n            animate={{ rotate: isDropdownOpenComments ? 180 : 0 }}\n            transition={{ duration: 0.2 }}\n          >\n            <FaArrowDown className=\"text-white\" />\n          </motion.div>\n        </motion.button>\n\n        <AnimatePresence>\n          {isDropdownOpenComments && (\n            <div className=\"rounded-lg p-2 h-screen \">\n              {comments.length === 0 ? (\n                <p className=\"text-gray-900 text-lg text-center font-bold\">\n                  No hay comentarios\n                </p>\n              ) : (\n                comments.map((comment, index) => (\n                  <motion.div\n                    key={comment.id}\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: index * 0.2 }}\n                    className=\"m-2 rounded-lg  border transition-all duration-300 cursor-pointer\"\n                    onClick={() => onCommentClick(comment)}\n                  >\n                    {editingCommentId === comment.id ? (\n                      <div>\n                        <textarea\n                          value={updatedContent}\n                          onChange={(e) => setUpdatedContent(e.target.value)}\n                          className=\"w-full p-2 border rounded\"\n                        />\n                        <div className=\"flex space-x-2 m-2\">\n                          <button\n                            onClick={() => handleEditSubmit(comment.id)}\n                            className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n                          >\n                            Guardar\n                          </button>\n                          <button\n                            onClick={() => setEditingCommentId(null)}\n                            className=\"bg-red-500 text-white px-4 py-2 rounded\"\n                          >\n                            Cancelar\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"bg-white rounded-lg p-4 \">\n                        <div className=\"flex-grow\">\n                          <p className=\"text-gray-800 text-base\">\n                            <strong className=\"font-semibold\">\n                              Comentario:\n                            </strong>{\" \"}\n                            {comment.attributes.correccion}\n                          </p>\n                          {comment.attributes.quote && (\n                            <p className=\"text-gray-600 text-sm mt-1 italic border-l-4 border-blue-900 pl-2 bg-blue-50 rounded p-2\">\n                              <strong className=\"font-semibold\">\n                                Texto seleccionado:\n                              </strong>{\" \"}\n                              {comment.attributes.quote}\n                            </p>\n                          )}\n                          <div className=\"date-option grid grid-cols-1 md:grid-cols-2 items-center\">\n                            <div className=\"date\">\n                              <p className=\"text-gray-600 text-sm mt-1\">\n                                <strong className=\"font-semibold\">\n                                  Fecha de Creación:\n                                </strong>{\" \"}\n                                <span className=\"inline-flex items-center px-4 py-2 rounded-full bg-blue-50 text-blue-700\">\n                                  {new Date(\n                                    comment.attributes.createdAt\n                                  ).toLocaleDateString(\"es-ES\", {\n                                    year: \"numeric\",\n                                    month: \"long\",\n                                    day: \"numeric\",\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                  })}\n                                </span>\n                              </p>\n                              <p className=\"text-gray-600 text-sm mt-1\">\n                                <strong className=\"font-semibold\">\n                                  Fecha de Modificación:\n                                </strong>{\" \"}\n                                <span className=\"inline-flex items-center px-4 py-2 rounded-full bg-yellow-50 text-yellow-700\">\n                                  {new Date(\n                                    comment.attributes.updatedAt\n                                  ).toLocaleDateString(\"es-ES\", {\n                                    year: \"numeric\",\n                                    month: \"long\",\n                                    day: \"numeric\",\n                                    hour: \"2-digit\",\n                                    minute: \"2-digit\",\n                                  })}\n                                </span>\n                              </p>\n                            </div>\n                            <div className=\"option \">\n                              {rol === \"tutor\" && (\n                                <div className=\"flex justify-start gap-2 m-2\">\n                                  <button\n                                    onClick={() => handleEditClick(comment)}\n                                    className=\"text-yellow-500 hover:text-yellow-600 bg-gray-900 p-2 rounded-lg flex items-center justify-center w-12 h-12\"\n                                    title=\"Editar\"\n                                  >\n                                    <FaPen size={24} />\n                                  </button>\n                                  <button\n                                    onClick={() =>\n                                      handleDeleteClick(comment.id)\n                                    }\n                                    className=\"text-red-500 hover:text-red-600 bg-gray-900 p-2 rounded-lg flex items-center justify-center w-12 h-12\"\n                                    title=\"Eliminar\"\n                                  >\n                                    <MdDelete size={24} />\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </motion.div>\n                ))\n              )}\n            </div>\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentsPanel;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/DocumentComparePopup.jsx","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token :","line":157,"column":34,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useCallback } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf';\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\nimport { highlightPlugin, RenderHighlightsProps } from '@react-pdf-viewer/highlight';\nimport { GlobalWorkerOptions } from 'pdfjs-dist/build/pdf';\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport '@react-pdf-viewer/default-layout/lib/styles/index.css';\nimport { motion } from 'framer-motion';\nimport { API_URL, WORKER_URL} from \"../core/config\";\nimport * as Diff from 'diff';\n\nimport { MdOutlineNavigateNext, MdOutlineNavigateBefore } from \"react-icons/md\";\nimport { FaCodeCompare } from \"react-icons/fa6\";\n\nimport { compareDocumentsAlert } from './Alerts/Alerts';\n\nGlobalWorkerOptions.workerSrc = WORKER_URL;\n\n\nconst DocumentComparePopup = ({ documents, onClose, currentIndex, setCurrentIndex }) => {\n\n  const [highlightPositions, setHighlightPositions] = useState([]);\n  const [isComparing, setIsComparing] = useState(false);\n\n  const sortedDocuments = [...documents].sort((a, b) => a.id- b.id);\n\n  const doc1 = sortedDocuments[currentIndex];\n  const doc2 = sortedDocuments[currentIndex + 1];\n\n  const documento1 = `${API_URL}${doc1.attributes.documentFile.data[0].attributes.url}`;\n  const documento2 = `${API_URL}${doc2.attributes.documentFile.data[0].attributes.url}`;\n\n/*   const extractTextFromPDF = async (url) => {\n    try {\n      const loadingTask = pdfjsLib.getDocument(url);\n      const pdf = await loadingTask.promise;\n      const promises = [];\n\n      for (let i = 1; i <= pdf.numPages; i++) {\n        promises.push(pdf.getPage(i).then(page => page.getTextContent()));\n      }\n\n      const pagesContent = await Promise.all(promises);\n      const text = pagesContent.map(content => content.items.map(item => item.str).join(' ')).join(' ');\n\n      return text.trim();\n    } catch (error) {\n      console.error(`Error extracting PDF text from URL: ${url}`, error);\n      throw error;\n    }\n  }; */\n\n  const getPDFPageContentsWithPositions = async (pdfUrl) => {\n    try {\n      const response = await fetch(pdfUrl);\n      const pdfArrayBuffer = await response.arrayBuffer();\n      const loadingTask = pdfjsLib.getDocument(pdfArrayBuffer);\n      const pdfDocument = await loadingTask.promise;\n  \n      const pages = [];\n      for (let i = 1; i <= pdfDocument.numPages; i++) {\n        const page = await pdfDocument.getPage(i);\n        const textContent = await page.getTextContent();\n  \n        pages.push({\n          pageNumber: i,\n          items: textContent.items.map((item) => ({\n            text: item.str,\n            transform: item.transform,\n            width: item.width,\n            height: item.height,\n          })),\n        });\n      }\n  \n      return pages;\n    } catch (error) {\n      console.error(\"Error extracting PDF text with positions:\", error);\n      throw error;\n    }\n  };\n\n  const findTextPositions = useCallback((text, documentData, isRemoved = false) => {\n    const positions = [];\n    const normalizedText = text.trim().toLowerCase(); // Normaliza el texto para que la búsqueda sea insensible a mayúsculas/minúsculas\n  \n    documentData.forEach(page => {\n      page.items.forEach(item => {\n        // Normalizamos el texto del item para una comparación más exacta\n        const normalizedItemText = item.text.trim().toLowerCase();\n  \n        // Comprobamos si el texto está incluido en el fragmento de texto actual (considerando que puede haber variaciones)\n        if (normalizedItemText.includes(normalizedText)) {\n          positions.push({\n            pageIndex: page.pageNumber - 1,\n            x: item.transform[4],\n            y: item.transform[5],\n            width: item.width,\n            height: item.height,\n            isRemoved,\n          });\n        }\n      });\n    });\n\n  \n    return positions;\n  }, []);\n  \n\n  const compareDocumentsWithPositions = async () => {\n    try {\n      const doc1Data = await getPDFPageContentsWithPositions(documento1);\n      const doc2Data = await getPDFPageContentsWithPositions(documento2);\n\n      const text1 = doc1Data.map(page => page.items.map(item => item.text).join(' ')).join('\\n');\n      const text2 = doc2Data.map(page => page.items.map(item => item.text).join(' ')).join('\\n');\n\n      const differences = Diff.diffChars(text1, text2);\n  \n      const calculatedPositions = [];\n\n      differences.forEach(part => {\n        // Ignorar diferencias con texto corto\n        if (part.value.trim().length <= 2) return;\n\n        console.log(\"part\", part);\n\n        if (part.removed && !part.added) {\n          // El texto fue eliminado y no añadido nuevamente\n          calculatedPositions.push(...findTextPositions(part.value.trim(), doc1Data, true));\n          console.log(\"calculatedPositions\", calculatedPositions);\n        } else if (part.added && !part.removed) {\n          // El texto fue añadido y no eliminado previamente\n          calculatedPositions.push(...findTextPositions(part.value.trim(), doc2Data, false));\n          console.log(\"calculatedPositions\", calculatedPositions);\n\n        } else if (part.added && part.removed) {\n          // Si el texto fue cambiado, puede marcarse como diferencia mutua\n          calculatedPositions.push(...findTextPositions(part.value.trim(), doc1Data, true)); // Desde doc1\n          calculatedPositions.push(...findTextPositions(part.value.trim(), doc2Data, false)); // Desde doc2\n          console.log(\"calculatedPositions\", calculatedPositions);\n\n        }\n      });\n\n      // Update highlight positions state\n      setHighlightPositions(calculatedPositions);\n\n      return calculatedPositions;\n    } catch (error) {\n      console.error(\"Error comparing documents with positions:\", error);\n      return [];\n    }\n  };\n\n  const renderHighlights = (props: RenderHighlightsProps) => (\n    <div>\n      {highlightPositions\n        .filter(area => area.pageIndex === props.pageIndex)\n        .map((area, idx) => (\n          <div\n            key={idx}\n            style={{\n              background: area.isRemoved ? 'red' : 'none',\n              opacity: 0.1,\n              position: 'absolute',\n              left: `${area.x}px`,\n              top: `${area.y}px`,\n              width: `${area.width}px`,\n              height: `${area.height}px`,\n            }}\n          />\n        ))}\n    </div>\n  );\n\n  const highlightPluginInstance = highlightPlugin({\n    renderHighlights,\n  });\n\n  const handleCompareClick = async () => {\n    setIsComparing(true);\n    try {\n      const differences = await compareDocumentsWithPositions();\n      \n      if (differences.length > 0) {\n        compareDocumentsAlert('Existen cambios', false); // Cambios detectados\n      } else {\n        compareDocumentsAlert('No existen cambios', true); // Sin cambios\n      }\n    } catch (error) {\n      console.error(\"Comparison error:\", error);\n      compareDocumentsAlert('Error al comparar documentos', false);\n    } finally {\n      setIsComparing(false);\n    }\n  };\n\n  const handlePrevious = () => {\n  setHighlightPositions([]); // Limpiar resaltados\n  setCurrentIndex(currentIndex - 1);\n};\n\nconst handleNext = () => {\n  setHighlightPositions([]); // Limpiar resaltados\n  setCurrentIndex(currentIndex + 1);\n};\n\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n\n      className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center z-50\">\n      <div className=\"bg-white rounded-lg shadow-lg p-6 w-11/12 md:w-4/5 lg:w-11/12 h-11/12 overflow-hidden\">\n\n\n        <div className=\"flex justify-between items-center mb-6\">\n          <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900\">\n            Comparar Documentos\n          </h2>\n\n          <motion.button onClick={onClose}\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            className=\"text-gray-500 hover:text-red-600 transition-colors duration-200 rounded-lg p-2 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-red-500\"\n          >\n            <svg\n              className=\"w-6 h-6 md:w-7 md:h-7\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </motion.button>\n        </div>\n\n\n        <div className=\"flex space-x-4 h-full \">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{\n              duration: 0.5, // Duración de la animación en segundos\n              ease: \"easeInOut\", // Tipo de suavizado\n            }}\n\n            className=\"relative flex-1 bg-gray-100 p-2 rounded-lg shadow-md\">\n            <h3 className=\"text-lg font-medium mb-2\">{doc1.attributes.title}</h3>\n            <div style={{ height: '650px', overflow: 'auto' }}>\n              <Worker workerUrl={WORKER_URL}>\n                <Viewer fileUrl={documento1} plugins={[highlightPluginInstance]}  />\n              </Worker>\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: 20 }}\n            transition={{\n              duration: 0.5, // Duración de la animación en segundos\n              ease: \"easeInOut\", // Tipo de suavizado\n            }}\n\n            className=\"relative flex-1 bg-gray-100 p-2 rounded-lg shadow-md\">\n            <h3 className=\"text-lg font-medium mb-2\">{doc2.attributes.title}</h3>\n            <div style={{ height: '650px', overflow: 'auto' }}>\n              <Worker workerUrl={WORKER_URL}>\n                <Viewer fileUrl={documento2} plugins={[highlightPluginInstance]} />\n              </Worker>\n            </div>\n          </motion.div>\n        </div>\n        <div className=\"mt-4 flex justify-between\">\n        <button\n  onClick={handlePrevious}\n  disabled={currentIndex === 0}\n  className=\"flex items-center bg-blue-700 text-white px-4 py-2 rounded-md hover:bg-blue-900 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300\"\n>\n  <MdOutlineNavigateBefore className='ml-2' />\n  Anterior\n</button>\n\n          <button\n            onClick={handleCompareClick}\n            className=\"flex items-center bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-600\"\n          >\n            <motion.div\n              animate={isComparing ? { rotate: 360 } : { rotate: 0 }}\n              transition={{ duration: 1, repeat: Infinity, 'ease': \"linear\" }}\n              style={{ originX: 0.5, originY: 0.5 }}\n              className=\"mr-2\"\n            >\n              <FaCodeCompare />\n            </motion.div>\n            Comparar\n          </button>\n\n          <button\n  onClick={handleNext}\n  disabled={currentIndex >= documents.length - 2}\n  className=\"flex items-center bg-blue-700 text-white px-4 py-2 rounded-md hover:bg-blue-900 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300\"\n>\n  Siguiente\n  <MdOutlineNavigateNext className=\"ml-2\" />\n</button>\n\n\n        </div>\n\n      </div>\n    </motion.div>\n  );\n};\n\nexport default DocumentComparePopup;","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/EditProject.jsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'project' is missing in props validation","line":8,"column":24,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":31},{"ruleId":"react/prop-types","severity":2,"message":"'onClose' is missing in props validation","line":8,"column":33,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":40},{"ruleId":"react/prop-types","severity":2,"message":"'onUpdate' is missing in props validation","line":8,"column":42,"nodeType":"Property","messageId":"missingPropType","endLine":8,"endColumn":50},{"ruleId":"react/prop-types","severity":2,"message":"'project.Title' is missing in props validation","line":19,"column":24,"nodeType":"Identifier","messageId":"missingPropType","endLine":19,"endColumn":29},{"ruleId":"react/prop-types","severity":2,"message":"'project.Descripcion' is missing in props validation","line":20,"column":30,"nodeType":"Identifier","messageId":"missingPropType","endLine":20,"endColumn":41},{"ruleId":"react/prop-types","severity":2,"message":"'project.tutor' is missing in props validation","line":21,"column":24,"nodeType":"Identifier","messageId":"missingPropType","endLine":21,"endColumn":29},{"ruleId":"react/prop-types","severity":2,"message":"'project.tutor' is missing in props validation","line":21,"column":40,"nodeType":"Identifier","messageId":"missingPropType","endLine":21,"endColumn":45},{"ruleId":"react/prop-types","severity":2,"message":"'project.tutor.id' is missing in props validation","line":21,"column":46,"nodeType":"Identifier","messageId":"missingPropType","endLine":21,"endColumn":48},{"ruleId":"react/prop-types","severity":2,"message":"'project.id' is missing in props validation","line":53,"column":35,"nodeType":"Identifier","messageId":"missingPropType","endLine":53,"endColumn":37}],"suppressedMessages":[],"errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport { updateProject } from \"../core/Projects\";\nimport Swal from \"sweetalert2\";\nimport { getTutors } from \"../core/Projects\";\nimport { motion } from \"framer-motion\";\nimport { errorAlert, successAlert } from \"./Alerts/Alerts\";\n\nconst EditProject = ({ project, onClose, onUpdate }) => {\n  const [formData, setFormData] = useState({\n    Title: \"\",\n    Descripcion: \"\",\n    tutor: \"\", // Asegúrate de que esto esté alineado con tus datos\n  });\n  const [tutores, setTutores] = useState([]);\n\n  useEffect(() => {\n    if (project) {\n      setFormData({\n        Title: project.Title || \"\",\n        Descripcion: project.Descripcion || \"\",\n        tutor: project.tutor ? project.tutor.id : \"\", // Extraer el ID del tutor\n      });\n    }\n\n    obtenerTutors();\n  }, [project]);\n\n  const obtenerTutors = async () => {\n    try {\n      const response = await getTutors();\n      setTutores(response);\n    } catch (error) {\n      console.error(\"Error al obtener la lista de tutores:\", error);\n    }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (!formData.tutor) {\n        Swal.fire(\"Error!\", \"Debes seleccionar un tutor.\", \"error\");\n        return;\n      }\n\n      await updateProject(project.id, formData);\n      onUpdate(); // Notifica al componente padre que se actualizó el proyecto\n      onClose(); // Cierra el modal\n\n      const mensaje = \"El proyecto ha sido editado.\";\n      successAlert(mensaje);\n    } catch (error) {\n      console.error(\"Error al actualizar el proyecto:\", error);\n      const mensaje =\n        error.response?.data?.message || \"Error al actualizar el proyecto\";\n      errorAlert(mensaje);\n    }\n  };\n\n  return (\n    <motion.form\n      onSubmit={handleSubmit}\n      className=\"max-w-2xl mx-auto bg-white shadow-lg rounded-xl p-6 md:p-8\"\n      initial={{ scale: 0.95 }}\n      animate={{ scale: 1 }}\n      transition={{ duration: 0.3 }}\n    >\n      <div className=\"space-y-6\">\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.3 }}\n        >\n          <label\n            htmlFor=\"title\"\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n          >\n            Título\n          </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"title\"\n            value={formData.Title}\n            onChange={handleChange}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700\"\n          />\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.4 }}\n        >\n          <label \n            htmlFor=\"descripcion\"\n          className=\"block text-gray-700 text-sm font-bold mb-2\">\n            Descripción\n          </label>\n          <textarea\n            name=\"descripcion\"\n            id=\"descripcion\"\n            value={formData.Descripcion}\n            onChange={handleChange}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700\"\n          />\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.5 }}\n        >\n          <label\n            htmlFor=\"tutor\"\n            className=\"block text-gray-700 font-semibold mb-2\"\n          >\n            Seleccionar Tutor\n          </label>\n          <select\n            id=\"tutor\"\n            name=\"tutor\"\n            data-testid=\"tutor-select\"\n            value={formData.tutor}\n            onChange={handleChange}\n            className=\"w-full px-3 py-2 border rounded-md focus:outline-none focus:ring focus:ring-indigo-200\"\n            required\n          >\n            <option value=\"\">Selecciona un tutor</option>\n            {Array.isArray(tutores) && tutores.length > 0 ? (\n              tutores.map((tutor) => (\n                <option key={tutor.id} value={tutor.id}>\n                  {tutor.username}\n                </option>\n              ))\n            ) : (\n              <option disabled>Cargando tutores...</option>\n            )}\n          </select>\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6 }}\n          className=\"flex items-center justify-between m-2\"\n        >\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold p-2 px-4 m-2 rounded\"\n          >\n            Guardar Cambios\n          </button>\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"bg-red-500 hover:bg-red-700 text-white font-bold p-2 px-4 m-2 rounded\"\n          >\n            Cancelar\n          </button>\n        </motion.div>\n      </div>\n    </motion.form>\n  );\n};\n\nexport default EditProject;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/EditProject.test.jsx","messages":[{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":16,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":17,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":18,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'afterAll' is not defined.","line":21,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":26,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'it' is not defined.","line":27,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":35,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":36,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":36,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":37,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":37,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":40,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":40,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":41,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":41,"endColumn":11}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, screen } from \"@testing-library/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport EditProject from \"./EditProject\";\n\n// Mock cualquier contexto o hook que uses\n/* jest.mock('./path-to-your-tutores-context', () => ({\n  useTutoresContext: () => ({\n    tutores: [\n      { id: '123', username: 'Test Tutor' },\n      { id: '456', username: 'Another Tutor' }\n    ]\n  })\n})); */\n\nbeforeAll(() => {\n  jest.spyOn(console, 'warn').mockImplementation(() => { }); // Silencia los warnings\n  jest.spyOn(console, 'error').mockImplementation(() => { }); // Silencia los errores\n});\n\nafterAll(() => {\n  console.warn.mockRestore(); // Restaura el comportamiento normal\n  console.error.mockRestore();\n});\n\ndescribe(\"EditProject Component\", () => {\n  it(\"renders the edit project form correctly\", () => {\n    render(\n      <Router>\n        <EditProject />\n      </Router>\n    );\n\n    // Verificar que los elementos principales del formulario estén presentes\n    expect(screen.getByLabelText('Título')).toBeInTheDocument();\n    expect(screen.getByLabelText('Descripción')).toBeInTheDocument();\n    expect(screen.getByLabelText('Seleccionar Tutor')).toBeInTheDocument();\n\n    // Verificar botones o elementos de acción\n    expect(screen.getByRole('button', { name: /guardar/i })).toBeInTheDocument();\n    expect(screen.getByRole('button', { name: /cancelar/i })).toBeInTheDocument();\n  });\n\n/*   it(\"renders form fields with correct input types\", () => {\n    render(\n      <Router>\n        <EditProject />\n      </Router>\n    );\n\n    const titleInput = screen.getByLabelText('Título');\n    const descripcionInput = screen.getByLabelText('Descripción');\n    const tutorSelect = screen.getByLabelText('Seleccionar Tutor');\n\n    expect(titleInput).toHaveAttribute('type', 'text');\n    expect(tutorSelect.tagName).toBe('SELECT');\n  }); */\n});","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/GeneratePdfButton.jsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'userInfo' is missing in props validation","line":7,"column":30,"nodeType":"Property","messageId":"missingPropType","endLine":7,"endColumn":38},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.Title' is missing in props validation","line":10,"column":7,"nodeType":"Property","messageId":"missingPropType","endLine":10,"endColumn":28},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.Descripcion' is missing in props validation","line":11,"column":7,"nodeType":"Property","messageId":"missingPropType","endLine":11,"endColumn":39},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.FechaCreacion' is missing in props validation","line":12,"column":7,"nodeType":"Property","messageId":"missingPropType","endLine":12,"endColumn":35},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.tutor' is missing in props validation","line":13,"column":7,"nodeType":"Property","messageId":"missingPropType","endLine":13,"endColumn":12},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.estudiante' is missing in props validation","line":14,"column":7,"nodeType":"Property","messageId":"missingPropType","endLine":14,"endColumn":17},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.tutor.data' is missing in props validation","line":21,"column":14,"nodeType":"Identifier","messageId":"missingPropType","endLine":21,"endColumn":18},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.tutor.data.attributes' is missing in props validation","line":21,"column":20,"nodeType":"Identifier","messageId":"missingPropType","endLine":21,"endColumn":30},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.tutor.data.attributes.username' is missing in props validation","line":21,"column":32,"nodeType":"Identifier","messageId":"missingPropType","endLine":21,"endColumn":40},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.estudiante.data' is missing in props validation","line":23,"column":19,"nodeType":"Identifier","messageId":"missingPropType","endLine":23,"endColumn":23},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.estudiante.data.attributes' is missing in props validation","line":23,"column":25,"nodeType":"Identifier","messageId":"missingPropType","endLine":23,"endColumn":35},{"ruleId":"react/prop-types","severity":2,"message":"'userInfo.estudiante.data.attributes.username' is missing in props validation","line":23,"column":37,"nodeType":"Identifier","messageId":"missingPropType","endLine":23,"endColumn":45}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport { motion } from \"framer-motion\";\nimport logo_computacion from \"../assets/logo_computacion.jpg\";\nimport logo_unl from \"../assets/logo_unl.png\";\n\nconst GeneratePdfButton = ({ userInfo }) => {\n  const generatePDF = () => {\n    const {\n      Title: nombreProyecto,\n      Descripcion: descripcionProyecto,\n      FechaCreacion: fechaCreacion,\n      tutor,\n      estudiante,\n    } = userInfo;\n\n    const fechaHoy = new Date();\n    const fechaFormateada = `${fechaHoy.getFullYear()}-${fechaHoy.getMonth()}-${fechaHoy.getDate()}`;\n\n    const nombreTutor =\n      tutor?.data?.attributes?.username || \"Sin tutor asignado\";\n    const nombreEstudiante =\n      estudiante?.data?.attributes?.username || \"Sin estudiante asignado\";\n\n    // Crear nuevo documento PDF\n    const doc = new jsPDF();\n\n    const columnaIzquierdaX = 20;\n    const columnaDerechaX = 120;\n\n    // Función para agregar el logo y encabezado\n    const addHeader = () => {\n      // Agregar logo de la universidad (asumiendo que tienes la imagen)\n      doc.addImage(logo_computacion, \"JPEG\", 20, 10, 40, 40);\n      doc.addImage(logo_unl, \"PNG\", 150, 10, 40, 40);\n\n      // Título de la institución\n      doc.setFontSize(14);\n      doc.setFont(\"helvetica\", \"bold\");\n      doc.text(\"UNIVERSIDAD NACIONAL DE LOJA\", 105, 20, { align: \"center\" });\n      doc.setFontSize(12);\n      doc.text(\"CARRERA DE COMPUTACIÓN\", 105, 27, { align: \"center\" });\n    };\n\n    // Agregar encabezado\n    addHeader();\n\n    // Línea separadora\n    doc.setLineWidth(0.5);\n    doc.line(20, 55, 190, 55);\n\n    // Título del documento\n    doc.setFontSize(14);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"REPORTE DE REVISIÓN DEL PROYECTO\", 105, 65, { align: \"center\" });\n\n    // Contenido principal\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n\n    // Información del proyecto\n    const startY = 80;\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Nombre del Proyecto:\", 20, startY);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(nombreProyecto, 20, startY + 7);\n\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Descripción:\", 20, startY + 20);\n    doc.setFont(\"helvetica\", \"normal\");\n    const descripcionLines = doc.splitTextToSize(descripcionProyecto, 150);\n    doc.text(descripcionLines, 20, startY + 27);\n\n    // Fechas (Columna 1)\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Fecha de Creación:\", columnaIzquierdaX, startY + 45);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(fechaCreacion, columnaIzquierdaX, startY + 52);\n\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Fecha de Revisión:\", columnaDerechaX, startY + 45);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(fechaFormateada, columnaDerechaX, startY + 52);\n\n    // Información de participantes (Columna 2)\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Revisado por:\", columnaDerechaX, startY + 85);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(`Ing. ${nombreTutor}`, columnaDerechaX, startY + 92);\n\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Elaborado por:\", columnaIzquierdaX, startY + 85);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(nombreEstudiante, columnaIzquierdaX, startY + 92);\n\n    // Sección de firmas\n    const firmaY = 220;\n    const pageWidth = doc.internal.pageSize.width;\n    // Calcular el centro para la línea de firma\n    const lineWidth = 60; // Ancho de la línea\n    const lineStartX = (pageWidth - lineWidth) / 2; // Centrar la línea\n    doc.line(lineStartX, firmaY, lineStartX + lineWidth, firmaY); // Línea centrada para firma del docente\n\n    doc.setFontSize(10);\n    doc.text(\"Firma del Docente\", 105, firmaY + 5, { align: \"center\" });\n    doc.text(`Ing. ${nombreTutor}`, 105, firmaY + 10, { align: \"center\" });\n\n    // Guardar el PDF\n    doc.save(\"reporte-proyecto.pdf\");\n  };\n\n  return (\n    <motion.button\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, ease: \"easeOut\" }}\n      className=\"font-bold mb-4 ml-4 bg-blue-600 text-white py-2 px-4 rounded-md shadow-sm hover:bg-blue-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-700\"\n      onClick={generatePDF}\n    >\n      Generar Informe de revisión\n    </motion.button>\n  );\n};\n\nexport default GeneratePdfButton;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/Navbar.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/Navbar.test.jsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":4,"column":35,"nodeType":"Identifier","messageId":"unusedVar","endLine":4,"endColumn":39},{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":6,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":6,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":7,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'afterAll' is not defined.","line":11,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":23,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'beforeEach' is not defined.","line":25,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":27,"column":37,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":41},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":33,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":33,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":42,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":42,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":45,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":45,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":46,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":47,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":47,"endColumn":15}],"suppressedMessages":[],"errorCount":13,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render, screen } from \"@testing-library/react\";\nimport React from \"react\";\nimport Navbar from \"./Navbar\"; // Ruta de tu componente\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nbeforeAll(() => {\n    jest.spyOn(console, 'warn').mockImplementation(() => { }); // Silencia los warnings\n    jest.spyOn(console, 'error').mockImplementation(() => { }); // Silencia los errores\n});\n\nafterAll(() => {\n    console.warn.mockRestore(); // Restaura el comportamiento normal\n    console.error.mockRestore();\n});\n\n// Simulación de los datos del usuario\n/* const mockUserData = {\n    username: \"John Doe\",\n    email: \"john@example.com\",\n    rol: \"tutor\" // o \"estudiante\" dependiendo del rol que quieras probar\n}; */\n\ndescribe(\"Navbar Component\", () => {\n    // Simulamos `localStorage` para que no genere advertencias\n    beforeEach(() => {\n        // Mocking localStorage\n        Storage.prototype.getItem = jest.fn(() => \"fakeToken\"); // Simula un token en el localStorage\n    });\n\n\n\n    //Ver el renderizado del navbar en diferentes tamaños\n    test(\"should render DocMentor and DocM based on screen size\", () => {\n        render(\n            <Router>\n                <Navbar />\n            </Router>\n        );\n\n        // Verificar que ambos textos 'DocM' y 'DocMentor' están en el documento\n        const docmElements = screen.getAllByText(/docm/i);\n        expect(docmElements).toHaveLength(2); // Debe haber dos elementos\n\n        // Verificar que DocM aparece solo en pantallas pequeñas\n        expect(docmElements[0]).toBeInTheDocument(); // 'DocM' visible en pantallas pequeñas\n        expect(docmElements[0]).toHaveClass(\"block\"); // 'DocM' tiene la clase 'block' en pantallas pequeñas\n        expect(docmElements[0]).not.toHaveClass(\"hidden\"); // 'DocM' no debe tener la clase 'hidden'\n\n\n    });\n\n    // Tutor sees \"Ver mis Proyectos\" and \"Inicio\" links\n    // Display \"Ver mis Proyectos\" and \"Inicio\" links for tutor role\n    /*         it('should display \"Ver mis Proyectos\" and \"Inicio\" links for tutor role', () => {\n                global.localStorage = {\n                  getItem: jest.fn(),\n                  setItem: jest.fn(),\n                };\n          \n                const mockToken = 'encrypted.jwt.token24234234';\n                const mockUserData = { username: 'test', email: 'test@test.com', rol: 'tutor' };\n                const mockDecryptedToken = 'decrypted.jwt.token';\n          \n                localStorage.setItem('jwtToken', mockToken);\n                localStorage.setItem('userData', JSON.stringify(mockUserData));\n          \n                jest.spyOn(localStorage, 'getItem');\n                jest.mock('../utils/encryption', () => ({\n                  decryptData: jest.fn((data) => {\n                    if (data === mockToken) return mockDecryptedToken;\n                    if (data === JSON.stringify(mockUserData)) return mockUserData;\n                  }),\n                }));\n          \n                const { getByText } = render(\n                    <Router>\n                        <Navbar />\n                    </Router>\n                );\n    \n                const decryptData = require ('../utils/encryption').decryptData;\n          \n                expect(localStorage.getItem).toHaveBeenCalledWith('jwtToken');\n                expect(localStorage.getItem).toHaveBeenCalledWith('userData');\n                //expect(decryptData).toHaveBeenCalledWith(mockToken);\n                //expect(decryptData).toHaveBeenCalledWith(mockUserData);\n                expect(getByText('Inicio')).toBeInTheDocument();\n                expect(getByText('Ver mis Proyectos')).toBeInTheDocument();\n              }); */\n\n\n/*     it('should toggle dropdown visibility when dropdown button is clicked', () => {\n        const mockUserData = { username: 'test', email: 'test@test.com', rol: 'tutor' };\n        jest.spyOn(React, 'useState').mockImplementation((init) => [init, jest.fn()]);\n        jest.spyOn(React, 'useEffect').mockImplementation((f) => f());\n\n        render(\n            <Router>\n                <Navbar />\n            </Router>\n        );\n\n\n        const dropdownButton = screen.getByText((content, element) => \n            element.tagName.toLowerCase() === 'span' && content.startsWith(mockUserData.username)\n          );\n          fireEvent.click(dropdownButton);\n    \n          expect(setIsDropdownOpen).toHaveBeenCalledWith(true);\n    \n          fireEvent.click(dropdownButton);\n    \n          expect(setIsDropdownOpen).toHaveBeenCalledWith(false);\n    }); */\n});\n\n\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/NewProject.jsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'onClose' is missing in props validation","line":13,"column":23,"nodeType":"Property","messageId":"missingPropType","endLine":13,"endColumn":30},{"ruleId":"react/prop-types","severity":2,"message":"'fetchProjects' is missing in props validation","line":13,"column":32,"nodeType":"Property","messageId":"missingPropType","endLine":13,"endColumn":45},{"ruleId":"no-unused-vars","severity":2,"message":"'partnerId' is assigned a value but never used.","line":20,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":20,"endColumn":19}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from \"react\";\nimport {\n  createProject,\n  getTutors,\n  getUserByEmail,\n  getUserById,\n} from \"../core/Projects\";\nimport { successAlert, errorAlert } from \"./Alerts/Alerts\";\nimport { motion } from \"framer-motion\";\nimport { decryptData } from \"../utils/encryption\";\nimport { User } from \"lucide-react\";\n\nconst NewProject = ({ onClose, fetchProjects }) => {\n  const [title, setTitle] = useState(\"\");\n  const [descripcion, setDescripcion] = useState(\"\");\n  const [tutores, setTutores] = useState([]);\n  const [selectedTutor, setSelectedTutor] = useState(\"\");\n  const [projectType, setProjectType] = useState(\"Individual\");\n  const [partnerEmail, setPartnerEmail] = useState(\"\");\n  const [partnerId, setPartnerId] = useState(null); // Guardar el ID del compañero\n  const [partnerData, setPartnerData] = useState(null);\n  const [selectedItinerary, setSelectedItinerary] = useState(\"\");\n  const [selectedPartners, setSelectedPartners] = useState([]);\n\n  const encryptedUserData = localStorage.getItem(\"userData\");\n  let userId = null;\n\n  if (encryptedUserData) {\n    // Desencriptar los datos\n    const decryptedUserData = decryptData(encryptedUserData);\n\n    // Acceder al rol desde los datos desencriptados\n    userId = decryptedUserData.id;\n  } else {\n    console.log(\"No se encontró el userData en localStorage\");\n  }\n\n  useEffect(() => {\n    const obtenerTutors = async () => {\n      try {\n        const response = await getTutors();\n        setTutores(response);\n      } catch (error) {\n        console.error(\"Error al obtener los tutores:\", error);\n      }\n    };\n    obtenerTutors();\n  }, []);\n\n  // Función para obtener el id del compañero por correo electrónico\n  const getPartnerIdByEmail = async (email) => {\n    try {\n      const response = await getUserByEmail(email);\n\n      if (response && Array.isArray(response) && response.length > 0) {\n        return response[0].id;\n      } else {\n        return null;\n      }\n    } catch (error) {\n      console.error(\"Error al obtener el ID del usuario:\", error);\n      return null;\n    }\n  };\n\n  // Manejar el cambio en el correo del compañero\n  const handlePartnerEmailChange = async (e) => {\n    const email = e.target.value;\n    setPartnerEmail(email);\n\n    // Buscar el compañero por el correo ingresado\n    const getPartnerId = await getPartnerIdByEmail(email);\n\n    setPartnerId(getPartnerId);\n\n    if (getPartnerId) {\n      try {\n        const response = await getUserById(getPartnerId);\n        if (response) {\n          const partner = response;\n          setPartnerData(partner);\n        } else {\n          console.error(\"No se encontró la información del compañero.\");\n          setPartnerData(null);\n        }\n      } catch (error) {\n        console.error(\"Error al obtener los datos del compañero:\", error);\n        setPartnerData(null);\n      }\n    } else {\n      setPartnerData(null);\n    }\n  };\n\n  const handleAddPartner = () => {\n    if (\n      partnerData &&\n      !selectedPartners.some((partner) => partner.id === partnerData.id)\n    ) {\n      setSelectedPartners((prev) => [...prev, partnerData]);\n      setPartnerEmail(\"\"); // Limpia el campo de entrada\n      setPartnerData(null); // Reinicia los datos del compañero\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const validEstudiantes = [\n      userId,\n      ...selectedPartners.map((partner) => partner.id),\n    ].filter((id) => id != null);\n\n    const projectData = {\n      Title: title,\n      Descripcion: descripcion,\n      tutor: parseInt(selectedTutor, 10),\n      estudiantes: validEstudiantes,\n      FechaCreacion: new Date().toISOString(),\n      tipoProyecto: projectType,\n      itinerario: selectedItinerary,\n    };\n    \n    const mensaje= \"Proyecto creado exitosamente\";\n    try {\n      await createProject(projectData);\n      successAlert(mensaje);\n      fetchProjects();\n      onClose();\n      setTitle(\"\");\n      setDescripcion(\"\");\n      setPartnerEmail(\"\");\n      setPartnerId(null);\n      setSelectedTutor(\"\");\n    } catch (error) {\n      console.error(\n        \"Error al crear el proyecto:\",\n        error.response ? error.response.data : error.message\n      );\n      errorAlert();\n    }\n  };\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"md:p-8 bg-gray-50\"\n    >\n      <motion.form\n        onSubmit={handleSubmit}\n        className=\"max-w-2xl mx-auto bg-white shadow-lg rounded-xl p-6 md:p-8\"\n        initial={{ scale: 0.95 }}\n        animate={{ scale: 1 }}\n        transition={{ duration: 0.3 }}\n      >\n        <div className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.3 }}\n          >\n            <label\n              htmlFor=\"title\"\n              className=\"block text-gray-700 font-semibold mb-2 text-lg\"\n            >\n              Título del Proyecto\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200\"\n              placeholder=\"Ingrese el título de su proyecto\"\n              required\n            />\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.4 }}\n          >\n            <label\n              htmlFor=\"description\"\n              className=\"block text-gray-700 font-semibold mb-2 text-lg\"\n            >\n              Descripción del Proyecto\n            </label>\n            <textarea\n              id=\"description\"\n              value={descripcion}\n              onChange={(e) => setDescripcion(e.target.value)}\n              className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 min-h-[120px] resize-y\"\n              placeholder=\"Describa brevemente su proyecto\"\n              required\n            />\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.5 }}\n          >\n            <label\n              htmlFor=\"projectType\"\n              className=\"block text-gray-700 font-semibold mb-2 text-lg\"\n            >\n              Tipo de Proyecto\n            </label>\n            <div className=\"flex space-x-4\">\n              <label className=\"inline-flex items-center\">\n                <input\n                  type=\"radio\"\n                  className=\"form-radio text-indigo-600\"\n                  name=\"projectType\"\n                  value=\"Individual\"\n                  checked={projectType === \"Individual\"}\n                  onChange={(e) => setProjectType(e.target.value)}\n                />\n                <span className=\"ml-2\">Individual</span>\n              </label>\n              <label className=\"inline-flex items-center\">\n                <input\n                  type=\"radio\"\n                  className=\"form-radio text-indigo-600\"\n                  name=\"projectType\"\n                  value=\"Grupal\"\n                  checked={projectType === \"Grupal\"}\n                  onChange={(e) => setProjectType(e.target.value)}\n                />\n                <span className=\"ml-2\">En Pareja</span>\n              </label>\n            </div>\n          </motion.div>\n\n          {projectType === \"Grupal\" && (\n            <motion.div\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2 }}\n            >\n              <label\n                htmlFor=\"partnerEmail\"\n                className=\"block text-gray-700 font-semibold mb-2 text-lg\"\n              >\n                Correo del Compañero\n              </label>\n              <input\n                type=\"email\"\n                id=\"partnerEmail\"\n                value={partnerEmail}\n                onChange={handlePartnerEmailChange}\n                className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200\"\n                placeholder=\"Ingrese el correo de su compañero\"\n              />\n\n              {partnerData ? (\n                <motion.div\n                  className=\" flex items-center justify-between mt-4 p-4 border rounded-lg bg-green-50 shadow-lg flex items-center space-x-4\"\n                  initial={{ opacity: 0, x: -50 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.5 }}\n                >\n                  <motion.div\n                    className=\"space-y-2 flex items-center justify-center\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ delay: 0.3, duration: 0.3 }}\n                  >\n                    <motion.div\n                      className=\"bg-gray-900 text-white rounded-full w-16 h-16 mb-4 shadow-xl flex items-center justify-center\"\n                      initial={{ opacity: 0, y: -20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ delay: 0.2 }}\n                    >\n                      <User className=\"w-12 h-12\" />\n                    </motion.div>\n\n                    <motion.div\n                      className=\"ml-2\"\n                      initial={{ opacity: 0, y: -20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ delay: 0.2 }}\n                    >\n                      <p className=\"text-sm font-semibold text-gray-700\">\n                        <strong>Nombre:</strong> {partnerData.username}\n                      </p>\n                      <p className=\"text-sm font-semibold text-gray-700\">\n                        <strong>Correo:</strong> {partnerData.email}\n                      </p>\n                    </motion.div>\n                  </motion.div>\n\n                  <motion.div\n                    className=\"mt-4 flex justify-end\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <button\n                      onClick={handleAddPartner}\n                      className=\"bg-indigo-500 text-white px-4 py-2 rounded-lg hover:bg-indigo-600 transition-all duration-200\"\n                    >\n                      Agregar Compañero\n                    </button>\n                  </motion.div>\n                </motion.div>\n              ) : (\n                <motion.div\n                  className=\"mt-4 p-4 border rounded-lg bg-red-50 shadow-lg flex items-center justify-center\"\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <p className=\"text-sm text-red-500 font-semibold\">\n                    Usuario no encontrado\n                  </p>\n                </motion.div>\n              )}\n\n              <motion.div\n                className=\"mt-6 space-y-4\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.2, duration: 0.5 }}\n              >\n                {selectedPartners.map((partner) => (\n                  <motion.div\n                    key={partner.id}\n                    className=\"flex items-center justify-between p-4 border rounded-lg bg-gray-100 shadow-md\"\n                    initial={{ opacity: 0, x: -20 }}\n                    animate={{ opacity: 1, x: 0 }}\n                    transition={{ duration: 0.3 }}\n                  >\n                    <div>\n                      <p className=\"text-sm font-semibold text-gray-700\">\n                        <strong>Nombre:</strong> {partner.username}\n                      </p>\n                      <p className=\"text-sm font-semibold text-gray-700\">\n                        <strong>Correo:</strong> {partner.email}\n                      </p>\n                    </div>\n                    <button\n                      onClick={() =>\n                        setSelectedPartners((prev) =>\n                          prev.filter((p) => p.id !== partner.id)\n                        )\n                      }\n                      className=\"text-red-500 font-bold hover:underline\"\n                    >\n                      Eliminar\n                    </button>\n                  </motion.div>\n                ))}\n              </motion.div>\n            </motion.div>\n          )}\n\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.5 }}\n          >\n            <label\n              htmlFor=\"tutor\"\n              className=\"block text-gray-700 font-semibold mb-2 text-lg\"\n            >\n              Seleccionar Itinerario\n            </label>\n\n            <select\n              id=\"itinerario\"\n              value={selectedItinerary}\n              onChange={(e) => setSelectedItinerary(e.target.value)} // Asegúrate de que el valor se actualice aquí\n              className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 bg-white\"\n            >\n              <option value=\"\" className=\"bg-white\">\n                Seleccionar Itinerario\n              </option>\n              <option value=\"Ingeniería de Software\" className=\"bg-white\">\n                Ingeniería de Software\n              </option>\n              <option value=\"Sistemas Inteligentes\" className=\"bg-white\">\n                Sistemas Inteligentes\n              </option>\n              <option value=\"Computación Aplicada\" className=\"bg-white\">\n                Computación Aplicada\n              </option>\n            </select>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.6 }}\n          >\n            <label\n              htmlFor=\"tutor\"\n              className=\"block text-gray-700 font-semibold mb-2 text-lg\"\n            >\n              Seleccionar Tutor\n            </label>\n            <select\n              id=\"tutor\"\n              value={selectedTutor}\n              onChange={(e) => setSelectedTutor(e.target.value)}\n              className=\"w-full px-4 py-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent transition-all duration-200 bg-white\"\n              required\n            >\n              <option value=\"\">Seleccione un tutor</option>\n              {Array.isArray(tutores) && tutores.length > 0 ? (\n                tutores.map((tutor) => (\n                  <option key={tutor.id} value={tutor.id}>\n                    {tutor.username}\n                  </option>\n                ))\n              ) : (\n                <option disabled>Cargando tutores...</option>\n              )}\n            </select>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.7 }}\n            className=\"pt-4\"\n          >\n            <button\n              type=\"submit\"\n              className=\"w-full bg-indigo-600 text-white font-semibold py-3 px-6 rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transform hover:scale-[1.02] transition-all duration-200 text-lg\"\n            >\n              Crear Proyecto\n            </button>\n          </motion.div>\n        </div>\n      </motion.form>\n    </motion.div>\n  );\n};\n\nexport default NewProject;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/ProjectsTable.jsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'projects' is missing in props validation","line":14,"column":3,"nodeType":"Property","messageId":"missingPropType","endLine":14,"endColumn":11},{"ruleId":"react/prop-types","severity":2,"message":"'columns' is missing in props validation","line":15,"column":3,"nodeType":"Property","messageId":"missingPropType","endLine":15,"endColumn":10},{"ruleId":"react/prop-types","severity":2,"message":"'linkBase' is missing in props validation","line":16,"column":3,"nodeType":"Property","messageId":"missingPropType","endLine":16,"endColumn":11},{"ruleId":"react/prop-types","severity":2,"message":"'fetchProjects' is missing in props validation","line":17,"column":3,"nodeType":"Property","messageId":"missingPropType","endLine":17,"endColumn":16},{"ruleId":"react/prop-types","severity":2,"message":"'onEdit' is missing in props validation","line":18,"column":3,"nodeType":"Property","messageId":"missingPropType","endLine":18,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'mensaje' is not defined.","line":64,"column":22,"nodeType":"Identifier","messageId":"undef","endLine":64,"endColumn":29},{"ruleId":"react/prop-types","severity":2,"message":"'columns.map' is missing in props validation","line":86,"column":22,"nodeType":"Identifier","messageId":"missingPropType","endLine":86,"endColumn":25},{"ruleId":"react/prop-types","severity":2,"message":"'projects.length' is missing in props validation","line":102,"column":57,"nodeType":"Identifier","messageId":"missingPropType","endLine":102,"endColumn":63},{"ruleId":"react/prop-types","severity":2,"message":"'columns.length' is missing in props validation","line":105,"column":34,"nodeType":"Identifier","messageId":"missingPropType","endLine":105,"endColumn":40},{"ruleId":"react/prop-types","severity":2,"message":"'projects.map' is missing in props validation","line":112,"column":22,"nodeType":"Identifier","messageId":"missingPropType","endLine":112,"endColumn":25},{"ruleId":"react/prop-types","severity":2,"message":"'columns.map' is missing in props validation","line":129,"column":28,"nodeType":"Identifier","messageId":"missingPropType","endLine":129,"endColumn":31}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// ProjectsTable.jsx\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaEye, FaPen } from \"react-icons/fa\";\nimport { MdDelete } from \"react-icons/md\";\nimport { deleteProject } from \"../core/Projects\";\nimport { motion } from \"framer-motion\";\n\nimport Swal from \"sweetalert2\";\nimport { decryptData } from \"../utils/encryption\";\nimport { errorAlert, successAlert } from \"./Alerts/Alerts\";\n\nconst ProjectsTable = ({\n  projects,\n  columns,\n  linkBase,\n  fetchProjects,\n  onEdit,\n}) => {\n  const formattedProjects = Array.isArray(projects) ? projects : [projects];\n\n  const encryptedUserData = localStorage.getItem(\"userData\");\n  let rol = null;\n\n  if (encryptedUserData) {\n    // Desencriptar los datos\n    const decryptedUserData = decryptData(encryptedUserData);\n\n    // Acceder al rol desde los datos desencriptados\n    rol = decryptedUserData.rol;\n  } else {\n    console.log(\"No se encontró el userData en localStorage\");\n  }\n\n  const handleDelete = async (projectId) => {\n    // Muestra la alerta de confirmación antes de eliminar\n    Swal.fire({\n      title: \"¿Estás seguro?\",\n      text: \"No podrás revertir esta acción!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Sí, eliminar!\",\n      cancelButtonText: \"Cancelar\",\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        try {\n          await deleteProject(projectId);\n          fetchProjects(); // Recarga los proyectos después de la eliminación\n          //Swal.fire(\"Eliminado!\", \"El proyecto ha sido eliminado.\", \"success\");\n          const mensaje = \"El proyecto ha sido eliminado\";\n          successAlert(mensaje);\n        } catch (error) {\n          console.error(\"Error al eliminar el proyecto:\", error);\n          Swal.fire(\n            \"Error!\",\n            \"Hubo un problema al eliminar el proyecto.\",\n            \"error\"\n          );\n\n          //const mensaje = error.response?.data?.message || \"Error al eliminar el proyecto\";\n\n          errorAlert(mensaje);\n        }\n      }\n    });\n  };\n\n  const handleEdit = async (projectId) => {\n    if (onEdit) {\n      onEdit(projectId);\n    }\n  };\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <motion.table\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n        className=\"min-w-full bg-white shadow-md rounded-lg overflow-hidden text-gray-800\"\n      >\n        <thead>\n          <tr>\n            {columns.map((column) => (\n              <th\n                key={column.key}\n                className=\"px-4 py-2 bg-gray-800 text-left text-sm font-medium text-white uppercase tracking-wider\"\n              >\n                {column.label}\n              </th>\n            ))}\n            {linkBase && (\n              <th className=\"px-4 py-2 bg-gray-800 text-left text-sm font-medium text-white uppercase tracking-wider\">\n                Acciones\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {Array.isArray(formattedProjects) && projects.length === 0 ? (\n            <tr className=\"bg-gray-800 text-white\">\n              <td\n                colSpan={columns.length + (linkBase ? 1 : 0)}\n                className=\"px-4 py-4 text-center\"\n              >\n                No hay proyectos disponibles\n              </td>\n            </tr>\n          ) : (\n            projects.map((project) => {\n              // Verifica si el atributo 'revisado' existe antes de determinar el color de la fila\n              const rowColor =\n                project.attributes?.revisado === false\n                  ? \"bg-yellow-100\" // Pendiente\n                  : project.attributes?.revisado === true\n                    ? \"bg-green-100\" // Revisado\n                    : \"bg-gray-50\"; // Por defecto\n\n              return (\n                <motion.tr\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: 0.2 }}\n                  key={project.id}\n                  className={`${rowColor}`}\n                >\n                  {columns.map((column) => (\n                    <td\n                      key={column.key}\n                      className=\"px-4 py-2 whitespace-nowrap text-base font-medium text-gray-900\"\n                    >\n                      {column.render\n                        ? column.render(project)\n                        : project[column.key]}\n                    </td>\n                  ))}\n                  {linkBase && (\n                    <td className=\"p-4 whitespace-nowrap text-base font-medium text-gray-900 flex items-center space-x-4\">\n                      <Link\n                        to={`${linkBase}/${project.id}`}\n                        className=\"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n                      >\n                        <FaEye className=\"text-blue-600 text-lg\" title=\"Ver\" />\n                      </Link>\n\n                      {rol === \"estudiante\" && (\n                        <>\n                          <button\n                            className=\"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n                            onClick={() => handleEdit(project.id)}\n                            title=\"Editar\"\n                          >\n                            <FaPen className=\"text-yellow-600 text-lg\" />\n                          </button>\n\n                          <button\n                            className=\"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n                            onClick={() => handleDelete(project.id)}\n                            title=\"Eliminar\"\n                          >\n                            <MdDelete className=\"text-red-600 text-lg\" />\n                          </button>\n                        </>\n                      )}\n                    </td>\n                  )}\n                </motion.tr>\n              );\n            })\n          )}\n        </tbody>\n      </motion.table>\n    </div>\n  );\n};\n\nexport default ProjectsTable;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/ProjectsTable.test.jsx","messages":[{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":11,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":12,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'afterAll' is not defined.","line":16,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":22,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":22,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":23,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":23,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":24,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":24,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":25,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":25,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":28,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'beforeEach' is not defined.","line":39,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":39,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'afterEach' is not defined.","line":44,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":46,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":49,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":49,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":60,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":60,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":61,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":61,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":62,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":62,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":63,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":63,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":68,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":68,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":75,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":75,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":80,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":80,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":81,"column":28,"nodeType":"Identifier","messageId":"undef","endLine":81,"endColumn":32},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":94,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":94,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":97,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":97,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":102,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":102,"endColumn":7},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":103,"column":30,"nodeType":"Identifier","messageId":"undef","endLine":103,"endColumn":34},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":118,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":118,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":125,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":125,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":139,"column":7,"nodeType":"Identifier","messageId":"undef","endLine":139,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":143,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":143,"endColumn":11}],"suppressedMessages":[],"errorCount":29,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ProjectsTable from \"./ProjectsTable\";\nimport Swal from \"sweetalert2\";\nimport { decryptData } from \"../utils/encryption\";\n\nimport { FaPen } from \"react-icons/fa\";\nimport { MdDelete } from \"react-icons/md\";\n\nbeforeAll(() => {\n  jest.spyOn(console, 'warn').mockImplementation(() => { }); // Silencia los warnings\n  jest.spyOn(console, 'error').mockImplementation(() => { }); // Silencia los errores\n});\n\nafterAll(() => {\n  console.warn.mockRestore(); // Restaura el comportamiento normal\n  console.error.mockRestore();\n});\n\n\njest.mock(\"../core/Projects\");\njest.mock(\"../utils/encryption\");\njest.mock(\"sweetalert2\", () => ({\n  fire: jest.fn(),\n}));\n\ndescribe(\"ProjectsTable\", () => {\n  const columns = [\n    { key: \"name\", label: \"Name\" },\n    { key: \"description\", label: \"Description\" },\n  ];\n\n  const projects = [\n    { id: 1, name: \"Project 1\", description: \"Description 1\" },\n    { id: 2, name: \"Project 2\", description: \"Description 2\" },\n  ];\n\n  beforeEach(() => {\n    localStorage.setItem(\"userData\", JSON.stringify({ rol: \"estudiante\" }));\n    decryptData.mockReturnValue({ rol: \"estudiante\" });\n  });\n\n  afterEach(() => {\n    localStorage.clear();\n    jest.clearAllMocks();\n  });\n\n  test(\"renders table with projects\", () => {\n    render(\n      <Router>\n        <ProjectsTable\n          projects={projects}\n          columns={columns}\n          linkBase=\"/projects\"\n        />\n      </Router>\n    );\n\n    expect(screen.getByText(\"Name\")).toBeInTheDocument();\n    expect(screen.getByText(\"Description\")).toBeInTheDocument();\n    expect(screen.getByText(\"Project 1\")).toBeInTheDocument();\n    expect(screen.getByText(\"Project 2\")).toBeInTheDocument();\n  });\n\n\n\n  test(\"renders no projects available message\", () => {\n    render(\n      <Router>\n        <ProjectsTable projects={[]} columns={columns} linkBase=\"/projects\" />\n      </Router>\n    );\n\n    expect(\n      screen.getByText(\"No hay proyectos disponibles\")\n    ).toBeInTheDocument();\n  });\n\n  test(\"calls mockHandleEdit when edit button is clicked\", () => {\n    const mockHandleEdit = jest.fn();\n\n    render(\n      <button\n        className=\"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n        onClick={() => mockHandleEdit(projects[0].id)}\n        title=\"Editar\"\n      >\n        <FaPen className=\"text-yellow-600 text-lg\" />\n      </button>\n    );\n\n    const button = screen.getByTitle(\"Editar\");\n    expect(button).toBeInTheDocument();\n\n    // Check button has correct classes\n    expect(button).toHaveClass(\n      \"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n    );\n  });\n\n  test(\"calls mockHandleDelete when delete button is clicked\", () => {\n    const mockHandleDelete = jest.fn();\n\n    Swal.fire.mockResolvedValue({ isConfirmed: true });\n\n    render(\n      <button\n        className=\"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n        onClick={() => mockHandleDelete(projects[0].id)}\n        title=\"Eliminar\"\n      >\n        <MdDelete className=\"text-red-600 text-lg\" />\n      </button>\n    );\n\n    const button = screen.getByTitle(\"Eliminar\");\n    expect(button).toBeInTheDocument();\n\n    // call the alert function when the button is clicked\n    fireEvent.click(button);\n\n    // Verificar que Swal.fire se llama con los parámetros correctos\n    waitFor(() => {\n      expect(Swal.fire).toHaveBeenCalledWith({\n        title: \"¿Estás seguro?\",\n        text: \"No podrás revertir esta acción!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Sí, eliminar!\",\n        cancelButtonText: \"Cancelar\",\n      });\n    });\n\n    // Simular la confirmación de la alerta\n    waitFor(() => {\n      expect(mockHandleDelete).toHaveBeenCalledWith(projects[0].id);\n    });\n\n    // Check button has correct classes\n    expect(button).toHaveClass(\n      \"flex items-center justify-center w-10 h-10 bg-gray-900 rounded-lg\"\n    );\n  });\n\n\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/components/SubirDocumento.jsx","messages":[{"ruleId":"react/prop-types","severity":2,"message":"'projectId' is missing in props validation","line":5,"column":27,"nodeType":"Property","messageId":"missingPropType","endLine":5,"endColumn":36},{"ruleId":"react/prop-types","severity":2,"message":"'onClose' is missing in props validation","line":5,"column":38,"nodeType":"Property","messageId":"missingPropType","endLine":5,"endColumn":45},{"ruleId":"no-unused-vars","severity":2,"message":"'documentData' is assigned a value but never used.","line":19,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":19,"endColumn":25}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport { uploadFile, createDocument } from \"../core/Document\";\nimport { successAlert, errorAlert } from \"./Alerts/Alerts\";\n\nconst SubirDocumento = ({ projectId, onClose }) => {\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!file || !title || !projectId) {\n      alert(\"Por favor, complete todos los campos.\");\n      return;\n    }\n\n    try {\n      const uploadedFile = await uploadFile(file);\n      const documentData = await createDocument(\n        title,\n        uploadedFile.id,\n        projectId\n      );\n      const mensaje = \"Documento subido correctamente\";\n      successAlert(mensaje);\n      setTitle(\"\");\n      setFile(null);\n      if (onClose) onClose();\n    } catch (error) {\n      console.error(\"Error uploading document:\", error);\n      const mensaje = error.response?.data?.message || \"Error al subir el documento\";\n      errorAlert(mensaje);\n    }\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"space-y-6 p-6 bg-white rounded-lg shadow-md\"\n    >\n      <div>\n        <label\n          htmlFor=\"title\"\n          className=\"block text-sm font-semibold text-gray-800 mb-2\"\n        >\n          Título del Documento\n        </label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"w-full border border-gray-300 rounded-lg p-2 shadow-sm focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 transition duration-150 ease-in-out\"\n          required\n        />\n      </div>\n\n      <div>\n        <label\n          htmlFor=\"file\"\n          className=\"block text-sm font-semibold text-gray-800 mb-2\"\n        >\n          Archivo del Documento\n        </label>\n        <input\n          type=\"file\"\n          id=\"file\"\n          accept=\".pdf\" // Solo permite archivos con extensión .pdf\n          onChange={(e) => {\n            const selectedFile = e.target.files[0];\n            if (selectedFile && selectedFile.type === \"application/pdf\") {\n              setFile(selectedFile); // Solo se establece si es un archivo PDF válido\n            } else {\n              alert(\"Por favor, selecciona un archivo PDF válido.\");\n              e.target.value = null; // Limpia el input si no es válido\n            }\n          }}\n          className=\"w-full border border-gray-300 rounded-lg shadow-sm focus:border-indigo-500 focus:ring-1 focus:ring-indigo-500 transition duration-150 ease-in-out\"\n          required\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-indigo-600 text-white py-3 px-4 rounded-lg shadow-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-150 ease-in-out\"\n      >\n        Subir Documento\n      </button>\n    </form>\n  );\n};\n\nexport default SubirDocumento;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/core/Autentication.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'registerResponse' is assigned a value but never used.","line":71,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":71,"endColumn":29}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import axios from \"axios\";\nimport { API_URL } from \"./config\";\n\n// Configurar axios para que incluya cookies en cada solicitud\n/* axios.defaults.withCredentials = true; */\n\n\n//METODO PARA REGISTRAR UN USUARIO\nexport const registerUser = async (data) => {\n  console.log(\"data\", data);\n  try {\n    const response = await axios.post(`${API_URL}/api/auth/local/register`, data);\n    console.log(\"response\", response.data);\n    return response.data;\n  } catch (error) {\n    // Si hay un error, lo vuelves a lanzar para que pueda ser manejado en el componente\n    console.error(\"Error en el registro de usuario:\", error);\n    throw error; // Re-lanza el error para capturarlo en el componente\n  }\n};\n\n\nexport const login = async (data) => {\n  try {\n    const response = await axios.post(`${API_URL}/api/auth/local`, data, {\n\n    });\n    return response.data;\n  } catch (error) {\n    // Captura y muestra detalles del error\n    console.error(\"Error en login:\", error);\n    throw error;  // Para que el error sea capturado en el `handleSubmit`\n  }\n};\n\nexport const checkUserExists = async (email) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/users?filters[email][$eq]=${email}`);\n    return response.data.length > 0;\n  } catch (error) {\n    console.error(\"Error verificando usuario:\", error);\n    throw error;\n  }\n};\n\n\nexport const loginOrRegister = async (data) => {\n  try {\n    // Primero verificamos si el usuario existe\n    const userExists = await checkUserExists(data.email);\n    \n    if (userExists) {\n      // Si el usuario existe, intentamos el login\n      const loginData = {\n        identifier: data.email,\n        password: data.password,\n      };\n      \n      const loginResponse = await login(loginData);\n      return loginResponse;\n      \n    } else {\n      // Si el usuario no existe, lo registramos\n      const registerData = {\n        username: data.email,\n        email: data.email,\n        password: data.password,\n        rol: data.rol,\n      };\n      \n      const registerResponse = await registerUser(registerData);\n      \n      // Después del registro exitoso, hacemos login automáticamente\n      const loginData = {\n        identifier: data.email,\n        password: data.password,\n      };\n      \n      const loginResponse = await login(loginData);\n      return loginResponse;\n    }\n  } catch (error) {\n    console.error(\"Error en login o registro:\", error);\n    if (error.response) {\n      console.error(\"Detalles del error:\", {\n        data: error.response.data,\n        status: error.response.status,\n        headers: error.response.headers\n      });\n    }\n    throw error;\n  }\n};\n\n// Método para obtener el usuario con el rol incluido\nexport const getUserWithRole = async (userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/api/users/${userId}?populate=rol`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener el usuario con rol:\", error);\n    throw error;\n  }\n};\n\n//METODO PARA OBTENER LOS ROLES\nexport const getRoles = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/api/rols`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener los roles:\", error);\n    return []; // Devuelve un array vacío en caso de error\n  }\n};\n\n\n\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/core/Comments.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/core/Document.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/core/Notification.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/core/Projects.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/core/config.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":1,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":1,"endColumn":31},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":3,"column":27,"nodeType":"Identifier","messageId":"undef","endLine":3,"endColumn":34},{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":5,"column":27,"nodeType":"Identifier","messageId":"undef","endLine":5,"endColumn":34}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export const API_URL = process.env.REACT_APP_API_URL;\n/* export const WORKER_URL = 'https://unpkg.com/pdfjs-dist@3.11.174/build/pdf.worker.min.js'; */\nexport const WORKER_URL = process.env.REACT_APP_WORKER_URL;\n\nexport const SECRET_KEY = process.env.REACT_APP_SECRET_KEY;\n\n// Validación y logging\nif (!API_URL) {\n  console.error('API_URL no está definida. Verifica tus archivos .env');\n}\n\n\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/index.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'reportWebVitals' is defined but never used.","line":5,"column":8,"nodeType":"Identifier","messageId":"unusedVar","endLine":5,"endColumn":23}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './setupPdfWorker'\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n/* reportWebVitals();\n */","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/k6/document.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/k6/proyecto.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'projectId' is assigned a value but never used.","line":33,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":33,"endColumn":18}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import http from 'k6/http';\nimport { check, sleep } from 'k6';\n\nexport let options = {\n  stages: [\n    { duration: '30s', target: 10 },  // Simula 10 usuarios durante 30 segundos\n    { duration: '1m', target: 50 },   // Aumenta a 50 usuarios durante 1 minuto\n    { duration: '30s', target: 0 },   // Reduce a 0 usuarios durante 30 segundos\n  ],\n};\n\nconst BASE_URL = 'https://silly-things-refuse.loca.lt/api'; // URL de tu API\n\nexport default function () {\n  // 1. Crear un nuevo Proyecto\n  const createProjectData = {\n    Title: 'Nuevo Proyecto',\n    Descripcion: 'Descripción de prueba del proyecto',\n    tipoProyecto: 'Desarrollo',\n    itinerario: 'Desarrollo de Software',\n  };\n\n  let createProjectResponse = http.post(`${BASE_URL}/new-projects`, JSON.stringify({\n    data: { createProjectData }\n  }), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n\n  check(createProjectResponse, {\n    'Proyecto creado': (r) => r.status === 201,\n  });\n\n  const projectId = createProjectResponse.json().id; // Obtener ID del proyecto creado\n\n  sleep(1); // Pausa para simular retraso entre peticiones\n\n  // 2. Listar todos los Proyectos (GET)\n  let listProjectsResponse = http.get(`${BASE_URL}/new-projects`);\n  check(listProjectsResponse, {\n    'Listado de proyectos exitoso': (r) => r.status === 200,\n  });\n\n  sleep(1); // Pausa\n\n  /*   // 3. Actualizar el Proyecto (PUT)\n    const updateProjectData = {\n      Title: 'Proyecto Actualizado',\n      Descripcion: 'Descripción de proyecto actualizada',\n    };\n  \n    let updateProjectResponse = http.put(`${BASE_URL}/new-projects/${projectId}`, JSON.stringify(updateProjectData), {\n      headers: { 'Content-Type': 'application/json' },\n    });\n  \n    check(updateProjectResponse, {\n      'Proyecto actualizado': (r) => r.status === 200,\n    });\n  \n    sleep(1); // Pausa\n  \n    // 4. Eliminar el Proyecto (DELETE)\n    let deleteProjectResponse = http.del(`${BASE_URL}/new-projects/${projectId}`);\n    check(deleteProjectResponse, {\n      'Proyecto eliminado': (r) => r.status === 200,\n    });\n   */\n  sleep(1); // Pausa\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/Dashboar.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":7,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":7,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":8,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":8,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":9,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'afterAll' is not defined.","line":12,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":18,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":21,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":28,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":28,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":29,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":30,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":31,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":31,"endColumn":15}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, screen} from \"@testing-library/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Dashboard from \"./Dashboard\";\n\n\nbeforeAll(() => {\n    jest.spyOn(console, 'warn').mockImplementation(() => { }); // Silencia los warnings\n    jest.spyOn(console, 'error').mockImplementation(() => { }); // Silencia los errores\n});\n\nafterAll(() => {\n    console.warn.mockRestore(); // Restaura el comportamiento normal\n    console.error.mockRestore();\n});\n\n\ndescribe(\"Dashboard Component\", () => {\n\n\n    test(\"debe mostrar el Dashboard\", () => {\n        render(\n            <Router>\n                <Dashboard />\n            </Router>\n        );\n\n        expect(screen.getByText(/Bienvenido a DocMentor/i)).toBeInTheDocument();\n        expect(screen.getByRole(\"button\", { name: /iniciar sesión/i })).toBeInTheDocument();\n        expect(screen.getByRole(\"button\", { name: /registrarse/i })).toBeInTheDocument();\n        expect(true).toBe(true);\n    });\n});","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/Dashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/DocumentViewer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/Login.jsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'loginOrRegister' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":3,"endColumn":25},{"ruleId":"no-unused-vars","severity":2,"message":"'USER_STORAGE_KEYS' is defined but never used.","line":12,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":12,"endColumn":20},{"ruleId":"no-unused-vars","severity":2,"message":"'saveUserData' is defined but never used.","line":13,"column":3,"nodeType":"Identifier","messageId":"unusedVar","endLine":13,"endColumn":15}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { loginOrRegister, getUserWithRole, login } from \"../core/Autentication\";\nimport {\n  loginSuccessAlert,\n  loginErrorAlert,\n} from \"../components/Alerts/Alerts\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  ROLE_ROUTES,\n  USER_STORAGE_KEYS,\n  saveUserData,\n  validateAuthResponse,\n} from \"../utils/auth.utils\";\nimport { encryptData } from \"../utils/encryption\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      // 1. Intento de login o registro\n      const authResponse = await login({\n        identifier: email,\n        password: password,\n      });\n\n      // Validar la respuesta\n      validateAuthResponse(authResponse);\n\n      // Extraer datos y guardar JWT\n      const { jwt, user } = authResponse;\n\n\n      // Obtener rol del usuario\n      const userWithRole = await getUserWithRole(user.id);\n      const userRole = userWithRole.rol?.tipoRol;\n\n      if (!userRole) {\n        throw new Error(\"No se pudo obtener el rol del usuario\");\n      }\n\n      const userWithRoleData ={\n        ...user,\n        rol: userRole\n      }\n\n      // Encriptar los datos antes de guardarlos\n      const encryptedJwt = encryptData(jwt);\n      const encryptedUserData = encryptData(userWithRoleData);\n\n      localStorage.setItem(\"jwtToken\", encryptedJwt);\n      localStorage.setItem(\"userData\", encryptedUserData);\n\n      // Mostrar mensaje de éxito\n      loginSuccessAlert(user.username);\n\n      // Redireccionar según el rol\n      const route = ROLE_ROUTES[userRole];\n      if (route) {\n        navigate(route);\n      } else {\n        throw new Error(`Rol desconocido: ${userRole}`);\n      }\n    } catch (error) {\n      console.error(\"Error en el proceso de autenticación:\", error);\n\n      const errorMessage =\"Error en el inicio de sesión. Verifica tus credenciales.\";\n\n      loginErrorAlert(errorMessage);\n    }\n  };\n\n  return (\n    <div\n      className=\"min-h-screen bg-gray-900 bg-cover bg-center bg-no-repeat bg-blend-multiply\"\n      style={{\n        backgroundImage:\n          \"url('https://i.pinimg.com/736x/d9/31/5e/d9315e4c788771c8cba5406db9791d75.jpg')\",\n      }}\n    >\n      <div className=\"flex items-center justify-center px-4 py-24 mx-auto max-w-screen-md lg:py-56\">\n        <motion.form\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-gray-900 p-6 rounded-lg shadow-lg w-full max-w-md\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"mb-5\">\n            <label\n              htmlFor=\"email\"\n              className=\"block mb-2 text-sm font-medium text-white\"\n            >\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              className=\"w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 text-white placeholder-gray-400\"\n              placeholder=\"nombre@unl.edu.ec\"\n              required\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-5\">\n            <label\n              htmlFor=\"password\"\n              className=\"block mb-2 text-sm font-medium text-white\"\n            >\n              Contraseña\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              className=\"w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 text-white placeholder-gray-400\"\n              placeholder=\"********\"\n              required\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full px-5 py-2.5 text-sm font-medium text-white bg-blue-700 rounded-lg sm:w-auto hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Iniciar Sesión\n          </button>\n          <div className=\"mt-4 text-center text-white\">\n            ¿No tienes cuenta?{\" \"}\n            <Link to=\"/signup\" className=\"text-blue-500 hover:underline\">\n              Regístrate\n            </Link>\n          </div>\n        </motion.form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/Login.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":11,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":12,"column":8,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":13,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":13,"endColumn":22},{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":16,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":18,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":18,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'afterAll' is not defined.","line":21,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":21,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":27,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":27,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'beforeEach' is not defined.","line":30,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":31,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":31,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":35,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":35,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":44,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":45,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":45,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":46,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":47,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":47,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":50,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":50,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":70,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":70,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":75,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":75,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":100,"column":29,"nodeType":"Identifier","messageId":"undef","endLine":100,"endColumn":35},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":101,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":101,"endColumn":15}],"suppressedMessages":[],"errorCount":21,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport * as Auth from \"../core/Autentication\"; // Ajusta la importación según sea necesario\nimport { useNavigate } from \"react-router-dom\";\n\n\n// Mocks\njest.mock(\"../core/Autentication\");\njest.mock(\"react-router-dom\", () => ({\n    ...jest.requireActual(\"react-router-dom\"),\n    useNavigate: jest.fn(),\n}));\n\nbeforeAll(() => {\n    jest.spyOn(console, 'warn').mockImplementation(() => {}); // Silencia los warnings\n    jest.spyOn(console, 'error').mockImplementation(() => {}); // Silencia los errores\n  });\n  \n  afterAll(() => {\n    console.warn.mockRestore(); // Restaura el comportamiento normal\n    console.error.mockRestore();\n  });\n  \n\ndescribe(\"Login Component\", () => {\n    let mockNavigate;\n\n    beforeEach(() => {\n        mockNavigate = jest.fn();\n        useNavigate.mockReturnValue(mockNavigate);\n    });\n\n    test(\"debe mostrar el formulario de Login\", () => {\n\n        render(\n            <Router>\n                <Login />\n            </Router>\n        );\n\n\n        expect(screen.getByLabelText(/email/i)).toBeInTheDocument();\n        expect(screen.getByLabelText(/contraseña/i)).toBeInTheDocument();\n        expect(screen.getByRole(\"button\", { name: /iniciar sesión/i })).toBeInTheDocument();\n        expect(true).toBe(true);\n    });\n\n    test(\"debería mostrar una alerta de error si falla el inicio de sesión\", async () => {\n        Auth.login.mockRejectedValueOnce(new Error(\"Error en las credenciales\"));\n\n        render(\n            <Router>\n                <Login />\n            </Router>\n        );\n\n        fireEvent.change(screen.getByLabelText(/email/i), {\n            target: { value: \"test\" },\n        });\n\n        fireEvent.change(screen.getByLabelText(/contraseña/i), {\n            target: { value: \"wrongpassword\" },\n        });\n\n        fireEvent.click(screen.getByRole(\"button\", { name: /iniciar sesión/i }));\n\n        await waitFor(() =>\n            expect(screen.getByText(/¡Error!/i)).toBeInTheDocument()\n        );\n\n    });\n\n    test(\"debe redirigir a la ruta correcta después de iniciar sesión correctamente\", async () => {\n        // Simulamos el login exitoso\n        const mockAuthResponse = {\n            jwt: \"fake-jwt-token\",\n            user: { id: 1, username: \"testUser\" },\n        };\n        Auth.login.mockResolvedValueOnce(mockAuthResponse);\n        Auth.getUserWithRole.mockResolvedValueOnce({ rol: { tipoRol: \"estudiante\" } });\n\n        render(\n            <Router>\n                <Login />\n            </Router>\n        );\n\n        fireEvent.change(screen.getByLabelText(/email/i), {\n            target: { value: \"cristian.capa@unl.edu.ec\" },\n        });\n        fireEvent.change(screen.getByLabelText(/contraseña/i), {\n            target: { value: \"password123\" },\n        });\n\n        fireEvent.click(screen.getByRole(\"button\", { name: /iniciar sesión/i }));\n\n        // Esperar a que se haya llamado al navigate\n        await waitFor(() => expect(mockNavigate).toHaveBeenCalledWith(\"/student/dashboard\"));\n        expect(true).toBe(true);\n\n    });\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/ProjectsAsignedTutor.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/ProyectoDetalle.jsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'Link' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'closeComparePopup' is assigned a value but never used.","line":72,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":72,"endColumn":26}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getDocumentsByProjectId } from \"../core/Document\"; // Asegúrate de agregar deleteDocument a tus funciones core\nimport { getProjectById } from \"../core/Projects\";\nimport Navbar from \"../components/Navbar\";\nimport SubirDocumento from \"../components/SubirDocumento\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { User, Users } from \"lucide-react\";\nimport { warningAlert } from \"../components/Alerts/Alerts\";\nimport GeneratePdfButton from \"../components/GeneratePdfButton\";\n\nimport DocumentComparePopup from \"../components/DocumentComparePopup\";\nimport { decryptData } from \"../utils/encryption\";\nimport ProjectsTable from \"../components/ProjectsTable\";\n\nconst ProyectoDetalle = () => {\n  const { projectId } = useParams(); // Obtén el ID del proyecto de la URL\n\n  const [documents, setDocuments] = useState([]);\n  const [project, setProject] = useState(null);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // Estado para controlar la visibilidad del modal\n  let rol = null;\n  const [isShowComparePopupOpen, setShowIsComparePopupOpen] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(documents.length - 2);\n\n  const encryptedUserData = localStorage.getItem(\"userData\");\n\n  if (encryptedUserData) {\n    // Desencriptar los datos\n    const decryptedUserData = decryptData(encryptedUserData);\n\n    // Acceder al rol desde los datos desencriptados\n    rol = decryptedUserData.rol;\n  } else {\n    console.log(\"No se encontró el userData en localStorage\");\n  }\n\n  useEffect(() => {\n    fetchProject();\n  }, [projectId]);\n\n  const fetchProject = async () => {\n    try {\n      const projectDetails = await getProjectById(projectId);\n      setProject(projectDetails);\n\n      const documentsResponse = await getDocumentsByProjectId(projectId);\n      const fetchedDocuments = documentsResponse.data;\n      setDocuments(fetchedDocuments);\n\n      if (fetchedDocuments.length > 1) {\n        setCurrentIndex(fetchedDocuments.length - 2);\n      } else {\n        setCurrentIndex(0); // Manejo seguro en caso de que haya solo un documento\n      }\n    } catch (error) {\n      setError(\"Error fetching project details\");\n      console.error(\"Error fetching project details:\", error);\n    }\n  };\n\n  const handleCompareClick = () => {\n    if (documents.length > 1) {\n      setShowIsComparePopupOpen(true);\n      setCurrentIndex(documents.length - 2);\n    } else {\n      warningAlert(\"No existen los documentos suficientes para comparar\");\n    }\n  };\n\n  const closeComparePopup = () => {\n    setShowIsComparePopupOpen(false);\n  };\n\n  if (!project) {\n    return <p>Cargando detalles del proyecto...</p>;\n  }\n\n  const { attributes } = project;\n  const tutor = attributes.tutor?.data?.attributes || {};\n  // Acceder a los estudiantes (iterar sobre el array)\n  const estudiantes =\n    attributes.estudiantes?.data?.map((estudiante) => {\n      return estudiante.attributes;\n    }) || [];\n\n  const itinerario = attributes.itinerario || {};\n  const tipoProyecto = attributes.tipoProyecto || {};\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    // Opcionalmente, podrías volver a cargar los documentos aquí si es necesario\n    fetchProject();\n  };\n\n  const columns = [\n    {\n      key: \"title\",\n      label: \"Documento\",\n      render: (doc) => doc.attributes.title,\n    },\n    {\n      key: \"estado\",\n      label: \"Estado\",\n      render: (doc) =>\n        doc.attributes.revisado === false\n          ? \"Pendiente de revisión\"\n          : doc.attributes.revisado === true\n            ? \"Revisado\"\n            : \"Sin estado\",\n    },\n    {\n      key: \"fechaSubida\",\n      label: \"Fecha de Subida\",\n      render: (doc) => doc.attributes.fechaSubida || \"No disponible\",\n    },\n    {\n      key: \"acciones\",\n      label: \"\",\n      render: (doc) =>\n        doc.attributes.documentFile?.data?.length > 0 &&\n        doc.attributes.documentFile.data[0]?.attributes?.url ? (\n          <a\n            href={`/documento/${doc.id}`}\n            className=\"text-blue-600 hover:underline\"\n          >\n            Ver Documento\n          </a>\n        ) : (\n          <span className=\"text-gray-500\">No hay documento</span>\n        ),\n    },\n  ];\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container mx-auto p-6 bg-white shadow-md rounded-lg\">\n        {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n        <div className=\"flex flex-col md:flex-row gap-6 p-6 bg-gray-50 rounded-lg shadow-md\">\n          {/* Sección de información del proyecto */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"flex-1 bg-white p-6 rounded-xl shadow-sm border border-gray-100\"\n          >\n            <motion.h1\n              initial={{ opacity: 0, y: 10 }}\n              animate={{ opacity: project ? 1 : 0.5, y: 0 }}\n              transition={{ duration: 0.3 }}\n              className=\"text-4xl font-bold mb-4 text-gray-900 border-b pb-4 text-center\"\n            >\n              {project ? attributes.Title : \"Cargando...\"}\n            </motion.h1>\n\n            <h2 className=\"text-2xl font-bold \">Descripción del Proyecto:</h2>\n            <motion.p\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"text-lg mb-4 text-gray-700 leading-relaxed\"\n            >\n              {attributes.Descripcion}\n            </motion.p>\n\n            <div className=\"flex items-center \">\n              <h2 className=\"text-1xl font-bold mr-4\">\n                Creación del Proyecto:\n              </h2>\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5 }}\n                className=\"inline-flex items-center p-2 rounded-full bg-blue-50 text-blue-700\"\n              >\n                <span className=\"text-xs md:text-base\">\n                  {attributes.FechaCreacion}\n                </span>\n              </motion.div>\n            </div>\n            {/* Itinerario */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"flex items-center space-x-2 text-1xl mt-2\"\n            >\n              <h3 className=\"font-bold text-gray-800\">Itinerario:</h3>\n              <p className=\"px-3 py-1 rounded-full bg-blue-50 text-blue-700\">\n                {itinerario || \"Itinerario no especificado\"}\n              </p>\n            </motion.div>\n          </motion.div>\n\n          <div>\n            {/* Sección del tutor o estudiante */}\n            {rol === \"estudiante\" && (\n              <>\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: 0.2 }}\n                  className=\"lg:w-80 bg-gradient-to-br from-blue-50 to-white rounded-xl shadow-lg p-6 border border-blue-100\"\n                >\n                  <div className=\"flex flex-col items-center text-center\">\n                    <div className=\"bg-gray-900 text-white rounded-full w-20 h-20 flex items-center justify-center mb-4 shadow-md\">\n                      <User className=\"w-12 h-12\" />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <h2 className=\"text-xl font-bold text-gray-800\">\n                        Tutor del Proyecto\n                      </h2>\n                      <p className=\"text-lg font-semibold text-blue-600\">\n                        {tutor.username}\n                      </p>\n                      <div className=\"flex flex-col items-center text-center\">\n                        <div className=\"flex items-center m-1\">\n                          <p className=\"inline-flex items-center px-4 py-2 rounded-full bg-blue-50 text-blue-700\">\n                            {tutor.email}\n                          </p>\n                        </div>\n                        {/* <div className=\"flex items-center m-1\">\n                        <h3 className=\"text-sm font-semibold text-gray-800\">\n                          Carrera:\n                        </h3>\n                        <p className=\"inline-flex items-center px-4 py-2 rounded-full bg-blue-50 text-blue-700\">\n                          {tutor.carrera}\n                        </p>\n                      </div> */}\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              </>\n            )}\n\n            {rol === \"tutor\" && (\n              <>\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: 0.2 }}\n                  className=\"lg:w-80 bg-gradient-to-br from-blue-50 to-white rounded-xl shadow-lg p-6 border border-blue-100\"\n                >\n                  <div className=\"flex flex-col items-center text-center\">\n                    {/* Icono condicional según el tipo de proyecto */}\n                    <div className=\"bg-gray-900 text-white rounded-full w-20 h-20 flex items-center justify-center mb-4 shadow-md\">\n                      {tipoProyecto === \"Grupal\" ? (\n                        <Users className=\"w-12 h-12\" /> // Ícono para grupo\n                      ) : (\n                        <User className=\"w-12 h-12\" /> // Ícono para individual\n                      )}\n                    </div>\n\n                    <div className=\"space-y-4\">\n                      <h2 className=\"text-lg font-bold text-gray-800\">\n                        Estudiantes\n                      </h2>\n\n                      <div className=\"grid gap-4\">\n                        {estudiantes.map((estudiante, index) => (\n                          <motion.div\n                            key={index}\n                            initial={{ opacity: 0, x: -20 }}\n                            animate={{ opacity: 1, x: 0 }}\n                            transition={{ duration: 0.3, delay: index * 0.1 }}\n                          >\n                            <div className=\"flex items-center space-x-4 p-3 bg-white shadow-sm rounded-lg border border-gray-100 hover:border-blue-200 transition-colors duration-200 cursor-pointer\">\n                              <div className=\"flex-1 min-w-0\">\n                                <p className=\"text-sm font-medium text-blue-700 truncate\">\n                                  {estudiante.username ||\n                                    \"Nombre no disponible\"}\n                                </p>\n                                <p className=\"text-xs text-gray-500 truncate\">\n                                  {estudiante.email || \"Correo no disponible\"}\n                                </p>\n                              </div>\n                            </div>\n                          </motion.div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </motion.div>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div>\n          <motion.h2\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5 }}\n            className=\"text-2xl font-semibold mb-4 border-b-2 border-gray-300 pb-2 mt-5\"\n          >\n            Historial de Versiones:\n          </motion.h2>\n\n          {rol === \"estudiante\" && (\n            <>\n              <motion.button\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, ease: \"easeOut\" }}\n                onClick={() => setIsModalOpen(true)}\n                className=\"font-bold mb-4 bg-indigo-600 text-white py-2 px-4 rounded-md shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n              >\n                Subir Nuevo Documento\n              </motion.button>\n            </>\n          )}\n\n          <motion.button\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, ease: \"easeOut\" }}\n            onClick={handleCompareClick}\n            className=\"font-bold mb-4 ml-4 bg-red-600 text-white py-2 px-4 rounded-md shadow-sm hover:bg-red-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-700\"\n          >\n            Comparar Versiones\n          </motion.button>\n\n          {rol === \"tutor\" && <GeneratePdfButton userInfo={attributes} />}\n\n          <AnimatePresence>\n            {isShowComparePopupOpen && (\n              <DocumentComparePopup\n                documents={documents}\n                onClose={() => setShowIsComparePopupOpen(false)}\n                currentIndex={currentIndex}\n                setCurrentIndex={setCurrentIndex}\n              />\n            )}\n          </AnimatePresence>\n\n          <ProjectsTable projects={documents} columns={columns} />\n\n        </div>\n      </div>\n\n      {/* Modal Popup */}\n      <AnimatePresence>\n        {isModalOpen && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            transition={{ duration: 0.3 }}\n            className=\"fixed inset-0 bg-gray-800 bg-opacity-75 flex justify-center items-center z-50 p-4 md:p-6\"\n          >\n            <div className=\"bg-white p-8 rounded-lg shadow-lg max-w-md mx-auto\">\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900\">\n                  Subir Documento\n                </h2>\n\n                <motion.button\n                  onClick={() => setIsModalOpen(false)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                  className=\"text-gray-500 hover:text-red-600 transition-colors duration-200 rounded-lg p-2 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-red-500\"\n                >\n                  <svg\n                    className=\"w-6 h-6 md:w-7 md:h-7\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth=\"2\"\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                </motion.button>\n              </div>\n              <SubirDocumento projectId={projectId} onClose={closeModal} />\n            </div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nexport default ProyectoDetalle;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/SignUp.jsx","messages":[{"ruleId":"no-undef","severity":2,"message":"'erroregisterErrorAlertrAlert' is not defined.","line":55,"column":11,"nodeType":"Identifier","messageId":"undef","endLine":55,"endColumn":39}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getRoles, registerUser } from \"../core/Autentication\";\nimport { successAlert, registerErrorAlert } from \"../components/Alerts/Alerts\";\nimport { motion } from \"framer-motion\";\n\nfunction SignUp() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rol, setRol] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchRoles();\n  }, []);\n  const fetchRoles = async () => {\n    try {\n      const response = await getRoles();\n      // Accede a la propiedad 'data' para obtener los roles\n      if (response && response.data) {\n        setRoles(response.data); // Aquí asignas directamente los roles a setRoles\n      } else {\n        console.error(\n          \"Error: La respuesta no contiene los roles correctamente.\"\n        );\n      }\n    } catch (error) {\n      console.error(\"Error fetching roles:\", error);\n      throw error;\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const data = { username, email, password, rol };\n      await registerUser(data);\n      successAlert();\n\n      setUsername(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setRol(\"\");\n      navigate(\"/login\");\n    } catch (error) {\n      if (error.response) {\n        if (error.response.status === 409) {\n          registerErrorAlert(\"El usuario ya existe.\");\n        } else if (error.response.status === 400) {\n          registerErrorAlert(\"Error en los datos proporcionados.\");\n        } else {\n          erroregisterErrorAlertrAlert(\n            \"Error al registrar el usuario. Inténtalo de nuevo.\"\n          );\n        }\n      } else {\n        registerErrorAlert(\n          \"Error al registrar el usuario. Inténtalo de nuevo.\"\n        );\n      }\n    }\n  };\n\n  return (\n    <div\n      className=\"min-h-screen bg-gray-900 bg-cover bg-center bg-no-repeat bg-blend-multiply\"\n      style={{\n        backgroundImage:\n          \"url('https://i.pinimg.com/736x/d9/31/5e/d9315e4c788771c8cba5406db9791d75.jpg')\",\n      }}\n    >\n      <div className=\"flex items-center justify-center px-4 py-24 mx-auto max-w-screen-md lg:py-56\">\n        <motion.form\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"bg-gray-900 p-6 rounded-lg shadow-lg w-full max-w-md\"\n          onSubmit={handleSubmit}\n        >\n          <div className=\"mb-5\">\n            <label\n              htmlFor=\"username\"\n              className=\"block mb-2 text-sm font-medium text-white\"\n            >\n              Nombre de Usuario\n            </label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              className=\"w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 text-white placeholder-gray-400\"\n              placeholder=\"nombre de usuario\"\n              required\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n\n          <div className=\"mb-5\">\n            <label\n              htmlFor=\"email\"\n              className=\"block mb-2 text-sm font-medium text-white\"\n            >\n              Email\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              className=\"w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 text-white placeholder-gray-400\"\n              placeholder=\"nombre@unl.edu.ec\"\n              required\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className=\"mb-5\">\n            <label\n              htmlFor=\"password\"\n              className=\"block mb-2 text-sm font-medium text-white\"\n            >\n              Contraseña\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              className=\"w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 text-white placeholder-gray-400\"\n              placeholder=\"********\"\n              required\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <div className=\"mb-5\">\n            <label\n              htmlFor=\"rol\"\n              className=\"block mb-2 text-sm font-medium text-white\"\n            >\n              Rol\n            </label>\n            <select\n              id=\"rol\"\n              className=\"w-full p-2.5 text-sm border rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 text-white placeholder-gray-400\"\n              required\n              value={rol}\n              onChange={(e) => setRol(e.target.value)}\n            >\n              <option value=\"\">Seleccione una opción</option>\n              {roles && roles.length > 0 ? (\n                roles.map((rol) => (\n                  <option key={rol.id} value={rol.id}>\n                    {rol.attributes.tipoRol}\n                  </option>\n                ))\n              ) : (\n                <option disabled>Cargando roles...</option>\n              )}\n            </select>\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full px-5 py-2.5 text-sm font-medium text-white bg-blue-700 rounded-lg sm:w-auto hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          >\n            Registrarme\n          </button>\n          <div className=\"mt-4 text-center text-white\">\n            ¿Ya tienes una cuenta?{\" \"}\n            <Link to=\"/login\" className=\"text-blue-500 hover:underline\">\n              Inicia Sesión\n            </Link>\n          </div>\n        </motion.form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/SignUp.test.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":9,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":9,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":10,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":10,"endColumn":5},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":11,"column":8,"nodeType":"Identifier","messageId":"undef","endLine":11,"endColumn":12},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":12,"column":18,"nodeType":"Identifier","messageId":"undef","endLine":12,"endColumn":22},{"ruleId":"no-undef","severity":2,"message":"'beforeAll' is not defined.","line":15,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":15,"endColumn":10},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":16,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":16,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":17,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":17,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'afterAll' is not defined.","line":20,"column":3,"nodeType":"Identifier","messageId":"undef","endLine":20,"endColumn":11},{"ruleId":"no-undef","severity":2,"message":"'describe' is not defined.","line":26,"column":1,"nodeType":"Identifier","messageId":"undef","endLine":26,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'beforeEach' is not defined.","line":29,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":29,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'jest' is not defined.","line":30,"column":24,"nodeType":"Identifier","messageId":"undef","endLine":30,"endColumn":28},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":34,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":34,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":43,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":43,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":44,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":44,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":45,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":45,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":46,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":46,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":48,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":48,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":49,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":49,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":52,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":52,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":54,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":54,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":56,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":56,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":60,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":60,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":84,"column":29,"nodeType":"Identifier","messageId":"undef","endLine":84,"endColumn":35},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":87,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":87,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":124,"column":29,"nodeType":"Identifier","messageId":"undef","endLine":124,"endColumn":35},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":125,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":125,"endColumn":15},{"ruleId":"no-undef","severity":2,"message":"'test' is not defined.","line":129,"column":5,"nodeType":"Identifier","messageId":"undef","endLine":129,"endColumn":9},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":146,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":146,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":147,"column":13,"nodeType":"Identifier","messageId":"undef","endLine":147,"endColumn":19},{"ruleId":"no-undef","severity":2,"message":"'expect' is not defined.","line":155,"column":9,"nodeType":"Identifier","messageId":"undef","endLine":155,"endColumn":15}],"suppressedMessages":[],"errorCount":30,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport SignUp from \"./SignUp\";\nimport * as Auth from \"../core/Autentication\"; // Ajusta la importación según sea necesario\nimport { useNavigate } from \"react-router-dom\";\n\n// Mocks\njest.mock(\"../core/Autentication\");\njest.mock(\"react-router-dom\", () => ({\n    ...jest.requireActual(\"react-router-dom\"),\n    useNavigate: jest.fn(),\n}));\n\nbeforeAll(() => {\n    jest.spyOn(console, 'warn').mockImplementation(() => {}); // Silencia los warnings\n    jest.spyOn(console, 'error').mockImplementation(() => {}); // Silencia los errores\n  });\n  \n  afterAll(() => {\n    console.warn.mockRestore(); // Restaura el comportamiento normal\n    console.error.mockRestore();\n  });\n  \n\ndescribe(\"SignUp Component\", () => {\n    let mockNavigate;\n\n    beforeEach(() => {\n        mockNavigate = jest.fn();\n        useNavigate.mockReturnValue(mockNavigate);\n    });\n\n    test(\"debe mostrar el formulario de Registro\", () => {\n\n        render(\n            <Router>\n                <SignUp />\n            </Router>\n        );\n\n        //LABELS\n        expect(screen.getByLabelText(/nombre de usuario/i)).toBeInTheDocument();\n        expect(screen.getByLabelText(/email/i)).toBeInTheDocument();\n        expect(screen.getByLabelText(/contraseña/i)).toBeInTheDocument();\n        expect(screen.getByLabelText(/Rol/i)).toBeInTheDocument();\n        //PLACEHOLDERS\n        expect(screen.getByPlaceholderText(/nombre de usuario/i)).toBeInTheDocument();\n        expect(screen.getByPlaceholderText(/nombre@unl.edu.ec/i)).toBeInTheDocument();\n\n        //BUTTONS\n        expect(screen.getByRole(\"button\", { name: /registrarme/i })).toBeInTheDocument();\n        //SELECT\n        expect(screen.getByRole(\"combobox\", { name: /rol/i })).toBeInTheDocument();\n\n        expect(true).toBe(true);\n    });\n\n\n    test(\"Deberia mostrar una alerta de error si falla el registro\", async () => {\n        Auth.registerUser.mockRejectedValueOnce(new Error(\"Error en el registro\"));\n\n        render(\n            <Router>\n                <SignUp />\n            </Router>\n        );\n\n        fireEvent.change(screen.getByLabelText(/nombre de usuario/i), {\n            target: { value: \"test\" },\n        });\n        fireEvent.change(screen.getByLabelText(/email/i), {\n            target: { value: \"test@gmail.com\" },\n        });\n        fireEvent.change(screen.getByLabelText(/contraseña/i), {\n            target: { value: \"test\" },\n        });\n        fireEvent.change(screen.getByLabelText(/rol/i), {\n            target: { value: 1 },\n        });\n\n        fireEvent.click(screen.getByRole(\"button\", { name: /registrarme/i }));\n\n        await waitFor(() => expect(screen.getByText(/¡Error al registrar el usuario!/i)).toBeInTheDocument());\n    });\n\n    test(\"Deberia redirigir al usuario a la pagina de login si el registro es exitoso\", async () => {\n        const mockUser = {\n            username: \"test\",\n            email: \"test@gmail.com\",\n            password: \"test\",\n            rol: 1\n        }\n\n\n\n        Auth.registerUser.mockResolvedValueOnce(mockUser);\n        Auth.getUserWithRole.mockResolvedValueOnce({ rol: { tipoRol: \"estudiante\" } });\n\n        render(\n            <Router>\n                <SignUp />\n            </Router>\n        );\n\n        fireEvent.change(screen.getByLabelText(/nombre de usuario/i), {\n            target: { value: \"test\" },\n        });\n\n        fireEvent.change(screen.getByLabelText(/email/i), {\n            target: { value: \"test@gmail.com\" },\n        });\n\n        fireEvent.change(screen.getByLabelText(/contraseña/i), {\n            target: { value: \"test\" },\n        });\n\n        fireEvent.change(screen.getByLabelText(/rol/i), {\n            target: { value: \"1\" },\n        });\n\n        fireEvent.click(screen.getByRole(\"button\", { name: /registrarme/i }));\n\n        await waitFor(() => expect(mockNavigate).toHaveBeenCalledWith(\"/login\"));\n        expect(true).toBe(true);\n\n    });\n\n    test(\"deberia obtener los roles de la base de datos\", async () => {\n        const mockRoles = [\n            { id: 1, attributes: { tipoRol: \"estudiante\" } },\n            { id: 2, attributes: { tipoRol: \"tutor\" } },\n        ];\n\n        // Asegúrate de que getRoles esté siendo mockeada correctamente\n        Auth.getRoles.mockResolvedValueOnce({ data: mockRoles });\n\n        render(\n            <Router>\n                <SignUp />\n            </Router>\n        );\n\n        // Espera a que se carguen los roles\n        await waitFor(() => {\n            expect(screen.getByText(/estudiante/i)).toBeInTheDocument();\n            expect(screen.getByText(/tutor/i)).toBeInTheDocument();\n        });\n\n        // También puedes verificar que el select tenga las opciones correctas\n        const select = screen.getByRole(\"combobox\");\n        const options = select.querySelectorAll(\"option\");\n\n        // Verifica que hay dos opciones además de la opción \"Seleccione una opción\"\n        expect(options).toHaveLength(3); // 1 opción por defecto + 2 roles\n    });\n\n});","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/StudentDashboard.jsx","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'useEffect' is defined but never used.","line":1,"column":17,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":26},{"ruleId":"no-unused-vars","severity":2,"message":"'useState' is defined but never used.","line":1,"column":28,"nodeType":"Identifier","messageId":"unusedVar","endLine":1,"endColumn":36}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport { motion } from \"framer-motion\";\nimport iconImage from \"../assets/icon_document.png\";\n\nfunction StudentDashboard() {\n  return (\n    <div className=\"Students\">\n      <Navbar />\n      <div className=\"flex items-center justify-center min-h-screen bg-blue-50 p-6\">\n        <div className=\"container mx-auto flex flex-col md:flex-row items-center gap-12 md:gap-8 lg:gap-16\">\n          {/* Sección de texto */}\n          <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.8, ease: \"easeOut\" }}\n            className=\"text-center md:text-left md:w-1/2\"\n          >\n            <h1 className=\"text-4xl md:text-5xl font-bold text-gray-900 mb-4\">\n              ¡Impulsa tu Proyecto de Integración Curricular!\n            </h1>\n            <p className=\"text-lg md:text-xl text-gray-700 space-y-2\">\n              <span className=\"block mb-3\">\n                Bienvenido al espacio donde podrás gestionar y dar seguimiento a\n                toda la documentación de tu Proyecto de Integración Curricular de manera\n                organizada y eficiente.\n              </span>\n              <span className=\"block text-gray-600\">\n                Sube documentos, realiza seguimiento de revisiones y mantén todo\n                tu proceso documentado en un solo lugar.\n              </span>\n            </p>\n          </motion.div>\n\n          <motion.div\n            initial={{ scale: 1 }} // Comenzamos con escala normal\n            animate={{\n              scale: 1.25, // Solo animamos hasta 105%\n            }}\n            transition={{\n              duration: 1.5,\n              repeat: Infinity,\n              repeatType: \"reverse\", // Usamos \"reverse\" en lugar de \"mirror\"\n              ease: \"easeInOut\", // Mantiene la transición suave\n            }}\n            className=\"md:w-1/2 flex justify-center\"\n          >\n            <img\n              src={iconImage}\n              alt=\"Bienvenida al sistema de gestión documental\"\n              className=\"w-64 h-auto md:w-96 lg:w-[30rem] rounded-lg\"\n            />\n          </motion.div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default StudentDashboard;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/TutorDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/pages/ViewProjectsStudents.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/reportWebVitals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/setupPdfWorker.js","messages":[{"ruleId":"no-undef","severity":2,"message":"'process' is not defined.","line":4,"column":36,"nodeType":"Identifier","messageId":"undef","endLine":4,"endColumn":43}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { GlobalWorkerOptions } from 'pdfjs-dist';\n\n// Configura la ruta al worker\nGlobalWorkerOptions.workerSrc = `${process.env.PUBLIC_URL}/pdf.worker.js`;\n","usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/utils/auth.utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/crcode/Escritorio/docmentor/frontend/src/utils/encryption.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]